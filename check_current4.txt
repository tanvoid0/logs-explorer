
> logs-explorer@1.0.1 check /media/tan/ExternalDrive/project/production/logs-explorer
> svelte-kit sync && svelte-check --tsconfig ./jsconfig.json

Loading svelte-check in workspace: /media/tan/ExternalDrive/project/production/logs-explorer
Getting Svelte diagnostics...

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/button.svelte[39m:46:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m>
  [35m<slot />[36m
</button>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/card/index.svelte[39m:17:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<div class={cn("rounded-lg", variants[variant as keyof typeof variants], className)}>
  [35m<slot />[36m
</div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/card/header.svelte[39m:10:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<div class={cn("flex flex-col space-y-1.5 p-6", className)}>
  [35m<slot />[36m
</div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/card/title.svelte[39m:10:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<h3 class={cn("text-lg font-semibold leading-none tracking-tight", className)}>
  [35m<slot />[36m
</h3>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/card/description.svelte[39m:10:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<p class={cn("text-sm text-slate-600 dark:text-slate-400", className)}>
  [35m<slot />[36m
</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/card/content.svelte[39m:10:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<div class={cn("p-6 pt-0", className)}>
  [35m<slot />[36m
</div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/card/footer.svelte[39m:10:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<div class={cn("flex items-center p-6 pt-0", className)}>
  [35m<slot />[36m
</div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/feedback/alert.svelte[39m:18:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<div class={cn("relative w-full rounded-lg border p-4", variants[variant as keyof typeof variants], className)}>
  [35m<slot />[36m
</div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/feedback/badge.svelte[39m:27:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<span class={cn("inline-flex items-center rounded-full font-medium", variants[variant as keyof typeof variants], sizes[size as keyof typeof sizes], className)}>
  [35m<slot />[36m
</span>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/feedback/toast-container.svelte[39m:33:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m)}>
  [35m<slot />[36m
</div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table-modern/table.svelte[39m:10:5
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m  <table class="w-full caption-bottom text-sm">
    [35m<slot />[36m
  </table>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table-modern/table-header.svelte[39m:9:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<thead class={cn("[&_tr]:border-b", className)}>
  [35m<slot />[36m
</thead>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table-modern/table-body.svelte[39m:9:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<tbody class={cn("[&_tr:last-child]:border-0", className)}>
  [35m<slot />[36m
</tbody>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table-modern/table-row.svelte[39m:9:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<tr class={cn("border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted", className)}>
  [35m<slot />[36m
</tr>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table-modern/table-head.svelte[39m:9:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<th class={cn("h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0", className)}>
  [35m<slot />[36m
</th>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table-modern/table-cell.svelte[39m:9:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<td class={cn("p-4 align-middle [&:has([role=checkbox])]:pr-0", className)}>
  [35m<slot />[36m
</td>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/form/button.svelte[39m:46:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m>
  [35m<slot />[36m
</button>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/form/select.svelte[39m:21:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m>
  [35m<slot />[36m
</select>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/search/SearchExamples.svelte[39m:50:13
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m          {#each categoryExamples as example}
            [35m<div class="p-3 bg-slate-50 dark:bg-slate-800 rounded-md hover:bg-slate-100 dark:hover:bg-slate-700 transition-colors cursor-pointer"
                 onclick={() => useExample(example.query)}>
              <div class="flex items-start justify-between">
                <div class="flex-1">
                  <h5 class="text-sm font-medium text-slate-900 dark:text-slate-100 mb-1">
                    {example.title}
                  </h5>
                  <p class="text-xs text-slate-600 dark:text-slate-400 mb-2">
                    {example.description}
                  </p>
                  <code class="text-xs bg-slate-200 dark:bg-slate-700 px-2 py-1 rounded font-mono text-slate-800 dark:text-slate-200">
                    {example.query}
                  </code>
                </div>
                <Badge variant="secondary" size="sm" className="ml-2">
                  Use
                </Badge>
              </div>
            </div>[36m
          {/each}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/search/SearchExamples.svelte[39m:50:13
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m          {#each categoryExamples as example}
            [35m<div class="p-3 bg-slate-50 dark:bg-slate-800 rounded-md hover:bg-slate-100 dark:hover:bg-slate-700 transition-colors cursor-pointer"
                 onclick={() => useExample(example.query)}>
              <div class="flex items-start justify-between">
                <div class="flex-1">
                  <h5 class="text-sm font-medium text-slate-900 dark:text-slate-100 mb-1">
                    {example.title}
                  </h5>
                  <p class="text-xs text-slate-600 dark:text-slate-400 mb-2">
                    {example.description}
                  </p>
                  <code class="text-xs bg-slate-200 dark:bg-slate-700 px-2 py-1 rounded font-mono text-slate-800 dark:text-slate-200">
                    {example.query}
                  </code>
                </div>
                <Badge variant="secondary" size="sm" className="ml-2">
                  Use
                </Badge>
              </div>
            </div>[36m
          {/each}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/search/SearchExamples.svelte[39m:25:24
[31mError[39m: Parameter 'acc' implicitly has an 'any' type. (ts)
[36m  const groupedExamples = $derived(showCategories 
    ? examples.reduce(([35macc[36m, example) => {
        const category = example.category || 'General';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/search/SearchExamples.svelte[39m:25:29
[31mError[39m: Parameter 'example' implicitly has an 'any' type. (ts)
[36m  const groupedExamples = $derived(showCategories 
    ? examples.reduce((acc, [35mexample[36m) => {
        const category = example.category || 'General';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/search/SearchExamples.svelte[39m:49:18
[31mError[39m: Argument of type 'unknown' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m        <div class="space-y-2">
          {#each [35mcategoryExamples[36m as example}
            <div class="p-3 bg-slate-50 dark:bg-slate-800 rounded-md hover:bg-slate-100 dark:hover:bg-slate-700 transition-colors cursor-pointer"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/search/SearchExamples.svelte[39m:51:44
[31mError[39m: 'example' is of type 'unknown'. (ts)
[36m            <div class="p-3 bg-slate-50 dark:bg-slate-800 rounded-md hover:bg-slate-100 dark:hover:bg-slate-700 transition-colors cursor-pointer"
                 onclick={() => useExample([35mexample[36m.query)}>
              <div class="flex items-start justify-between">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/search/SearchExamples.svelte[39m:55:22
[31mError[39m: 'example' is of type 'unknown'. (ts)
[36m                  <h5 class="text-sm font-medium text-slate-900 dark:text-slate-100 mb-1">
                    {[35mexample[36m.title}
                  </h5>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/search/SearchExamples.svelte[39m:58:22
[31mError[39m: 'example' is of type 'unknown'. (ts)
[36m                  <p class="text-xs text-slate-600 dark:text-slate-400 mb-2">
                    {[35mexample[36m.description}
                  </p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/search/SearchExamples.svelte[39m:61:22
[31mError[39m: 'example' is of type 'unknown'. (ts)
[36m                  <code class="text-xs bg-slate-200 dark:bg-slate-700 px-2 py-1 rounded font-mono text-slate-800 dark:text-slate-200">
                    {[35mexample[36m.query}
                  </code>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/selector/BaseSelector.svelte[39m:29:3
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m{#if label}
  [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
    {label}
  </label>[36m
{/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/selector/BaseSelector.svelte[39m:36:3
[33mWarn[39m: Using `on:change` to listen to the change event is deprecated. Use the event attribute `onchange` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m  value={selectedValue}
  [35mon:change={handleChange}[36m
  disabled={disabled}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/action/ActionButton.svelte[39m:62:27
[31mError[39m: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ add: { icon: string; defaultLabel: string; defaultVariant: "default"; }; edit: { icon: string; defaultLabel: string; defaultVariant: "outline"; }; delete: { icon: string; defaultLabel: string; defaultVariant: "destructive"; }; ... 6 more ...; import: { ...; }; }'. (ts)
[36m
  const config = $derived([35mactionConfig[action][36m);
  const displayLabel = $derived(label || config.defaultLabel);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/action/ActionButton.svelte[39m:75:4
[31mError[39m: Object literal may only specify known properties, and 'loading' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m  {disabled}
  {[35mloading[36m}
  {className}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/layout/container.svelte[39m:20:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<div class={cn("mx-auto px-4 sm:px-6 lg:px-8", maxWidths[maxWidth as keyof typeof maxWidths], className)}>
  [35m<slot />[36m
</div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/layout/separator.svelte[39m:15:1
[33mWarn[39m: Self-closing HTML tags for non-void elements are ambiguous — use `<div ...></div>` rather than `<div ... />`
https://svelte.dev/e/element_invalid_self_closing_tag (svelte)
[36m
[35m<div
  role="separator"
  aria-orientation={orientation}
  class={cn("shrink-0 bg-slate-200 dark:bg-slate-700", orientations[orientation as keyof typeof orientations], className)}
/>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/action/ActionGroup.svelte[39m:39:7
[31mError[39m: Object literal may only specify known properties, and '"loading"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m      disabled={action.disabled}
      [35mloading[36m={action.loading}
      on:click={() => handleActionClick(action.action, index)}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table/TableFilters.svelte[39m:87:15
[31mError[39m: Object literal may only specify known properties, and '"selectedValues"' does not exist in type '$$ComponentProps'. (ts)
[36m              options={filter.options}
              [35mselectedValues[36m={filter.value ? [String(filter.value)] : []}
              placeholder={`Select ${filter.label}`}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table/TableFilters.svelte[39m:90:26
[31mError[39m: Parameter 'event' implicitly has an 'any' type. (ts)
[36m              size="sm"
              onchange={([35mevent[36m) => handleFilterChange(filter.key, event.detail.value)}
            />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table/TableFilters.svelte[39m:124:9
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type '$$ComponentProps'. (ts)
[36m        size="sm"
        [35monClick[36m={handleClearFilters}
      />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table/TablePagination.svelte[39m:96:38
[31mError[39m: Parameter 'size' implicitly has an 'any' type. (ts)
[36m      <BaseSelector
        options={pageSizeOptions.map([35msize[36m => ({ value: String(size), label: String(size) }))}
        selectedValues={[String(pageSize)]}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table/TablePagination.svelte[39m:97:9
[31mError[39m: Object literal may only specify known properties, and '"selectedValues"' does not exist in type '$$ComponentProps'. (ts)
[36m        options={pageSizeOptions.map(size => ({ value: String(size), label: String(size) }))}
        [35mselectedValues[36m={[String(pageSize)]}
        size="sm"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table/TablePagination.svelte[39m:114:7
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type '$$ComponentProps'. (ts)
[36m      disabled={currentPage === 1}
      [35monClick[36m={() => handlePageChange(currentPage - 1)}
    />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table/TablePagination.svelte[39m:126:11
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m            : 'border-slate-300 dark:border-slate-600 text-slate-700 dark:text-slate-300 hover:bg-slate-50 dark:hover:bg-slate-700'}"
          [35monClick[36m={() => handlePageChange(pageNum)}
        >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table/TablePagination.svelte[39m:140:7
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type '$$ComponentProps'. (ts)
[36m      disabled={currentPage === totalPages}
      [35monClick[36m={() => handlePageChange(currentPage + 1)}
    />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table/TableActions.svelte[39m:51:15
[31mError[39m: Parameter 'action' implicitly has an 'any' type. (ts)
[36m    return actions
      .filter([35maction[36m => action.bulkOnly)
      .map(action => ({ value: action.key, label: action.label }));[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table/TableActions.svelte[39m:52:12
[31mError[39m: Parameter 'action' implicitly has an 'any' type. (ts)
[36m      .filter(action => action.bulkOnly)
      .map([35maction[36m => ({ value: action.key, label: action.label }));
  }[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table/TableActions.svelte[39m:56:27
[31mError[39m: Parameter 'action' implicitly has an 'any' type. (ts)
[36m  function getIndividualActions() {
    return actions.filter([35maction[36m => !action.bulkOnly);
  }[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table/TableActions.svelte[39m:83:11
[31mError[39m: Object literal may only specify known properties, and '"selectedValues"' does not exist in type '$$ComponentProps'. (ts)
[36m          options={getBulkActionOptions()}
          [35mselectedValues[36m={[]}
          placeholder="Select action"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table/TableActions.svelte[39m:101:9
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type '$$ComponentProps'. (ts)
[36m        disabled={action.disabled}
        [35monClick[36m={() => handleAction(action.key)}
      />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/form-enhanced/FormBuilder.svelte[39m:104:7
[33mWarn[39m: Using `on:submit` to listen to the submit event is deprecated. Use the event attribute `onsubmit` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m
<form [35mon:submit|preventDefault={handleFormSubmit}[36m class="space-y-6 {className}">
  {#each fields as field}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/form-enhanced/FormBuilder.svelte[39m:115:9
[33mWarn[39m: Self-closing HTML tags for non-void elements are ambiguous — use `<textarea ...></textarea>` rather than `<textarea ... />`
https://svelte.dev/e/element_invalid_self_closing_tag (svelte)
[36m      {#if field.type === 'textarea'}
        [35m<textarea
          id={field.key}
          name={field.key}
          placeholder={field.placeholder}
          required={field.required}
          class="w-full px-3 py-2 border border-slate-300 rounded-md bg-white text-sm transition-colors placeholder:text-slate-500 focus:outline-none focus:ring-2 focus:ring-slate-500 focus:border-transparent disabled:cursor-not-allowed disabled:opacity-50 dark:border-slate-600 dark:bg-slate-800 dark:placeholder:text-slate-400 dark:focus:ring-slate-500"
          rows="4"
          value={values[field.key] || ''}
          on:input={(event) => handleInputChange(field.key, (event.target as HTMLTextAreaElement).value)}
        />[36m
      {:else if field.type === 'select' && field.options}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/form-enhanced/FormBuilder.svelte[39m:123:11
[33mWarn[39m: Using `on:input` to listen to the input event is deprecated. Use the event attribute `oninput` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          value={values[field.key] || ''}
          [35mon:input={(event) => handleInputChange(field.key, (event.target as HTMLTextAreaElement).value)}[36m
        />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/form-enhanced/FormBuilder.svelte[39m:139:13
[33mWarn[39m: Using `on:change` to listen to the change event is deprecated. Use the event attribute `onchange` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m            checked={values[field.key] || false}
            [35mon:change={(event) => handleInputChange(field.key, (event.target as HTMLInputElement).checked)}[36m
            class="w-4 h-4 text-blue-600 bg-slate-100 border-slate-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-slate-800 focus:ring-2 dark:bg-slate-700 dark:border-slate-600"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/form-enhanced/FormBuilder.svelte[39m:156:17
[33mWarn[39m: Using `on:change` to listen to the change event is deprecated. Use the event attribute `onchange` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m                checked={values[field.key] === option.value}
                [35mon:change={(event) => handleInputChange(field.key, (event.target as HTMLInputElement).value)}[36m
                class="w-4 h-4 text-blue-600 bg-slate-100 border-slate-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-slate-800 focus:ring-2 dark:bg-slate-700 dark:border-slate-600"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/form-enhanced/FormBuilder.svelte[39m:172:11
[33mWarn[39m: Using `on:change` to listen to the change event is deprecated. Use the event attribute `onchange` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          class="block w-full text-sm text-slate-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-slate-50 file:text-slate-700 hover:file:bg-slate-100 dark:file:bg-slate-700 dark:file:text-slate-300"
          [35mon:change={(event) => handleInputChange(field.key, (event.target as HTMLInputElement).files?.[0])}[36m
        />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/form-enhanced/FormValidation.svelte[39m:144:5
[31mError[39m: Object literal may only specify known properties, and '"title"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m    variant="destructive"
    [35mtitle[36m="Validation Errors"
    description="Please fix the following errors:"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/form-enhanced/FormExample.svelte[39m:206:7
[31mError[39m: Object literal may only specify known properties, and '"onsubmit"' does not exist in type '$$ComponentProps'. (ts)
[36m      submitLabel="Create User"
      [35monsubmit[36m={handleFormSubmit}
    />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/modal/ModalBuilder.svelte[39m:84:3
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m{#if isOpen}
  [35m<div 
    class="fixed inset-0 z-50 flex items-center justify-center {showBackdrop ? 'bg-black bg-opacity-50' : ''} p-4 {className}"
    on:click={handleBackdropClick}
  >
    <Card className="w-full {sizeClasses[size as keyof typeof sizeClasses]} max-h-[90vh] overflow-y-auto">
      <CardHeader>
        <div class="flex items-center justify-between">
          <div class="flex-1">
            <CardTitle>{title}</CardTitle>
            {#if description}
              <p class="text-sm text-slate-600 dark:text-slate-400 mt-1">{description}</p>
            {/if}
          </div>
          {#if showCloseButton}
            <Button 
              variant="ghost" 
              size="sm"
              on:click={handleClose}
              className="h-8 w-8 p-0 ml-4"
              disabled={loading}
            >
              <span class="sr-only">Close</span>
              <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </Button>
          {/if}
        </div>
      </CardHeader>
      
      <CardContent>
        {#if loading}
          <div class="flex items-center justify-center py-8">
            <div class="w-8 h-8 animate-spin rounded-full border-2 border-slate-300 border-t-slate-600"></div>
            <span class="ml-2 text-slate-600 dark:text-slate-400">Loading...</span>
          </div>
        {:else}
          <slot />
        {/if}
      </CardContent>

      {#if actions.length > 0}
        <div class="flex items-center justify-end gap-3 p-6 pt-0 border-t border-slate-200 dark:border-slate-700">
          {#each getSecondaryActions() as action}
            <Button
              variant={action.variant || 'outline'}
              size={action.size || 'default'}
              disabled={action.disabled || loading}
              on:click={() => handleAction(action.key)}
            >
              {#if action.loading}
                <div class="w-4 h-4 animate-spin rounded-full border-2 border-current border-t-transparent mr-2"></div>
              {/if}
              {action.label}
            </Button>
          {/each}
          
          {#if getPrimaryAction()}
            {@const primaryAction = getPrimaryAction()}
            <Button
              variant={primaryAction.variant || 'default'}
              size={primaryAction.size || 'default'}
              disabled={primaryAction.disabled || loading}
              on:click={() => handleAction(primaryAction.key)}
            >
              {#if primaryAction.loading}
                <div class="w-4 h-4 animate-spin rounded-full border-2 border-white border-t-transparent mr-2"></div>
              {/if}
              {primaryAction.label}
            </Button>
          {/if}
        </div>
      {/if}
    </Card>
  </div>[36m
{/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/modal/ModalBuilder.svelte[39m:84:3
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m{#if isOpen}
  [35m<div 
    class="fixed inset-0 z-50 flex items-center justify-center {showBackdrop ? 'bg-black bg-opacity-50' : ''} p-4 {className}"
    on:click={handleBackdropClick}
  >
    <Card className="w-full {sizeClasses[size as keyof typeof sizeClasses]} max-h-[90vh] overflow-y-auto">
      <CardHeader>
        <div class="flex items-center justify-between">
          <div class="flex-1">
            <CardTitle>{title}</CardTitle>
            {#if description}
              <p class="text-sm text-slate-600 dark:text-slate-400 mt-1">{description}</p>
            {/if}
          </div>
          {#if showCloseButton}
            <Button 
              variant="ghost" 
              size="sm"
              on:click={handleClose}
              className="h-8 w-8 p-0 ml-4"
              disabled={loading}
            >
              <span class="sr-only">Close</span>
              <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </Button>
          {/if}
        </div>
      </CardHeader>
      
      <CardContent>
        {#if loading}
          <div class="flex items-center justify-center py-8">
            <div class="w-8 h-8 animate-spin rounded-full border-2 border-slate-300 border-t-slate-600"></div>
            <span class="ml-2 text-slate-600 dark:text-slate-400">Loading...</span>
          </div>
        {:else}
          <slot />
        {/if}
      </CardContent>

      {#if actions.length > 0}
        <div class="flex items-center justify-end gap-3 p-6 pt-0 border-t border-slate-200 dark:border-slate-700">
          {#each getSecondaryActions() as action}
            <Button
              variant={action.variant || 'outline'}
              size={action.size || 'default'}
              disabled={action.disabled || loading}
              on:click={() => handleAction(action.key)}
            >
              {#if action.loading}
                <div class="w-4 h-4 animate-spin rounded-full border-2 border-current border-t-transparent mr-2"></div>
              {/if}
              {action.label}
            </Button>
          {/each}
          
          {#if getPrimaryAction()}
            {@const primaryAction = getPrimaryAction()}
            <Button
              variant={primaryAction.variant || 'default'}
              size={primaryAction.size || 'default'}
              disabled={primaryAction.disabled || loading}
              on:click={() => handleAction(primaryAction.key)}
            >
              {#if primaryAction.loading}
                <div class="w-4 h-4 animate-spin rounded-full border-2 border-white border-t-transparent mr-2"></div>
              {/if}
              {primaryAction.label}
            </Button>
          {/if}
        </div>
      {/if}
    </Card>
  </div>[36m
{/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/modal/ModalBuilder.svelte[39m:86:5
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m    class="fixed inset-0 z-50 flex items-center justify-center {showBackdrop ? 'bg-black bg-opacity-50' : ''} p-4 {className}"
    [35mon:click={handleBackdropClick}[36m
  >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/modal/ModalBuilder.svelte[39m:121:11
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m        {:else}
          [35m<slot />[36m
        {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/modal/ModalManager.svelte[39m:75:7
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m    {:else}
      [35m<slot />[36m
    {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/modal/ConfirmationModal.svelte[39m:28:18
[31mError[39m: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ default: { icon: string; alertVariant: "default"; confirmVariant: "default"; }; warning: { icon: string; alertVariant: "warning"; confirmVariant: "outline"; }; destructive: { icon: string; alertVariant: "destructive"; confirmVariant: "destructive"; }; }'. (ts)
[36m
  const config = [35mvariantConfig[variant][36m;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/modal/ConfirmationModal.svelte[39m:73:11
[31mError[39m: Object literal may only specify known properties, and '"title"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m          variant={config.alertVariant}
          [35mtitle[36m=""
          description={message}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/modal/ModalExample.svelte[39m:204:9
[31mError[39m: Object literal may only specify known properties, and '"onsubmit"' does not exist in type '$$ComponentProps'. (ts)
[36m        showCancel={false}
        [35monsubmit[36m={handleFormSubmit}
      />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/display/LoadingState.svelte[39m:28:76
[31mError[39m: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ sm: string; default: string; lg: string; }'. (ts)
[36m      <div class="flex justify-center mb-4">
        <div class="animate-spin rounded-full border-b-2 border-slate-600 {[35mspinnerSizes[size][36m}"></div>
      </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/display/LoadingState.svelte[39m:31:51
[31mError[39m: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ sm: string; default: string; lg: string; }'. (ts)
[36m    {/if}
    <p class="text-slate-600 dark:text-slate-400 {[35msizes[size][36m}">
      {message}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/settings/SettingsSection.svelte[39m:27:5
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m  <CardContent>
    [35m<slot />[36m
  </CardContent>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/settings/SettingsForm.svelte[39m:49:5
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m  <div class="space-y-4">
    [35m<slot />[36m
  </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/settings/SettingsForm.svelte[39m:55:9
[31mError[39m: Object literal may only specify known properties, and '"type"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m      <Button 
        [35mtype[36m="button"
        variant="outline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/settings/SettingsForm.svelte[39m:64:7
[31mError[39m: Object literal may only specify known properties, and '"type"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m    <Button 
      [35mtype[36m="submit"
      loading={loading}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/settings/SettingsModal.svelte[39m:29:3
[33mWarn[39m: Elements with the 'dialog' interactive role must have a tabindex value
https://svelte.dev/e/a11y_interactive_supports_focus (svelte)
[36m{#if isOpen}
  [35m<div 
    class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 p-4 {className}"
    on:click={handleBackdropClick}
    role="dialog"
    aria-modal="true"
  >
    <Card className="w-full {sizeClasses[size as keyof typeof sizeClasses]} max-h-[90vh] overflow-y-auto">
      <CardHeader>
        <div class="flex items-center justify-between">
          <div>
            <CardTitle>{title}</CardTitle>
            {#if description}
              <p class="text-sm text-slate-600 dark:text-slate-400 mt-1">{description}</p>
            {/if}
          </div>
          {#if showCloseButton}
            <Button 
              variant="ghost" 
              size="sm"
              on:click={handleClose}
              className="h-8 w-8 p-0"
            >
              <span class="sr-only">Close</span>
              <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </Button>
          {/if}
        </div>
      </CardHeader>
      <CardContent>
        <slot />
      </CardContent>
    </Card>
  </div>[36m
{/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/settings/SettingsModal.svelte[39m:29:3
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m{#if isOpen}
  [35m<div 
    class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 p-4 {className}"
    on:click={handleBackdropClick}
    role="dialog"
    aria-modal="true"
  >
    <Card className="w-full {sizeClasses[size as keyof typeof sizeClasses]} max-h-[90vh] overflow-y-auto">
      <CardHeader>
        <div class="flex items-center justify-between">
          <div>
            <CardTitle>{title}</CardTitle>
            {#if description}
              <p class="text-sm text-slate-600 dark:text-slate-400 mt-1">{description}</p>
            {/if}
          </div>
          {#if showCloseButton}
            <Button 
              variant="ghost" 
              size="sm"
              on:click={handleClose}
              className="h-8 w-8 p-0"
            >
              <span class="sr-only">Close</span>
              <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </Button>
          {/if}
        </div>
      </CardHeader>
      <CardContent>
        <slot />
      </CardContent>
    </Card>
  </div>[36m
{/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/settings/SettingsModal.svelte[39m:31:5
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m    class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 p-4 {className}"
    [35mon:click={handleBackdropClick}[36m
    role="dialog"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/settings/SettingsModal.svelte[39m:60:9
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m      <CardContent>
        [35m<slot />[36m
      </CardContent>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/navigation/SidebarNamespaceSelector.svelte[39m:60:50
[33mWarn[39m: This reference only captures the initial value of `filteredNamespaces`. Did you mean to reference it inside a closure instead?
https://svelte.dev/e/state_referenced_locally (svelte)
[36m  // Filter namespaces based on search query
  let displayNamespaces: K8sNamespace[] = $state([35mfilteredNamespaces[36m);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/terminal/CentralizedTerminal.svelte[39m:311:11
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m          </span>
          [35m<span 
            class="remove-tab"
            onclick={(e) => { e.stopPropagation(); removeProcess(process.id); }}
            title="Remove from history"
            role="button"
            tabindex="0"
          >
            ×
          </span>[36m
        </button>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/terminal/CentralizedTerminal.svelte[39m:437:62
[31mError[39m: Argument of type 'TerminalProcess | null' is not assignable to parameter of type 'LogContext | undefined'.
  Type 'null' is not assignable to type 'LogContext | undefined'. (ts)
[36m            logger.info('🔥 DEBUG: Current process history:', $processHistory);
            logger.info('🔥 DEBUG: Current active process:', [35m$activeProcess[36m);
            logger.info('🔥 DEBUG: Current running processes:', $runningProcesses);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/terminal/Terminal.svelte[39m:192:7
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m    <div class="flex items-center space-x-2">
      [35m<button
        onclick={clearTerminal}
        class="p-1 text-gray-400 hover:text-gray-200 hover:bg-gray-700 rounded"
        title="Clear terminal"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
        </svg>
      </button>[36m
      {#if isRunning}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/terminal/Terminal.svelte[39m:202:9
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m      {#if isRunning}
        [35m<button
          onclick={stopCommand}
          class="p-1 text-red-400 hover:text-red-200 hover:bg-red-900/20 rounded"
          title="Stop command"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 10a1 1 0 011-1h4a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 01-1-1v-4z"></path>
          </svg>
        </button>[36m
      {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/terminal/Terminal.svelte[39m:213:7
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m      {/if}
      [35m<button
        onclick={onClose}
        class="p-1 text-gray-400 hover:text-gray-200 hover:bg-gray-700 rounded"
        title="Close terminal"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/pipeline/PipelineEditor.svelte[39m:354:9
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m      <div class="form-group">
        [35m<label>Tags</label>[36m
        <div class="tags-input">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/pipeline/PipelineExecutor.svelte[39m:309:5
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m  {#if showExecutionModal && selectedPipeline}
    [35m<div class="modal-overlay" onclick={() => showExecutionModal = false}>
      <div class="modal-content" onclick={(e) => e.stopPropagation()}>
        <div class="modal-header">
          <h3>Run Pipeline: {selectedPipeline.name}</h3>
          <button class="modal-close" onclick={() => showExecutionModal = false}>
            <Icon icon="mdi:close" class="w-5 h-5" />
          </button>
        </div>

        <div class="modal-body">
          <p class="pipeline-description">{selectedPipeline.description}</p>
          
          {#if selectedPipeline.variables.length > 0}
            <div class="variables-section">
              <h4>Pipeline Variables</h4>
              <div class="variables-list">
                {#each selectedPipeline.variables as variable}
                  <div class="variable-item">
                    <label for={variable.name}>
                      {variable.name}
                      {#if variable.required}
                        <span class="required">*</span>
                      {/if}
                    </label>
                    {#if variable.description}
                      <p class="variable-description">{variable.description}</p>
                    {/if}
                    
                    {#if variable.type === 'boolean'}
                      <label class="checkbox-label">
                        <input
                          type="checkbox"
                          bind:checked={variableValues[variable.name]}
                        />
                        {variable.name}
                      </label>
                    {:else if variable.type === 'select' && variable.options}
                      <select
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        class="form-select"
                        required={variable.required}
                      >
                        <option value="">Select {variable.name}</option>
                        {#each variable.options as option}
                          <option value={option}>{option}</option>
                        {/each}
                      </select>
                    {:else if variable.type === 'number'}
                      <input
                        type="number"
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        placeholder={variable.defaultValue?.toString() || `Enter ${variable.name}`}
                        class="form-input"
                        required={variable.required}
                      />
                    {:else}
                      <input
                        type="text"
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        placeholder={variable.defaultValue?.toString() || `Enter ${variable.name}`}
                        class="form-input"
                        required={variable.required}
                      />
                    {/if}
                  </div>
                {/each}
              </div>
            </div>
          {:else}
            <p class="no-variables">This pipeline has no configurable variables.</p>
          {/if}

          <div class="runtime-variables">
            <h4>Runtime Variables</h4>
            <p class="runtime-info">These variables will be automatically provided:</p>
            <div class="runtime-list">
              <div class="runtime-item">
                <span class="variable-name">PROJECT_NAME</span>
                <span class="variable-value">{projectName}</span>
              </div>
              <div class="runtime-item">
                <span class="variable-name">PROJECT_PATH</span>
                <span class="variable-value">{projectPath}</span>
              </div>
              <div class="runtime-item">
                <span class="variable-name">PROJECT_NAMESPACE</span>
                <span class="variable-value">{projectNamespace}</span>
              </div>
              {#if projectFramework}
                <div class="runtime-item">
                  <span class="variable-name">PROJECT_FRAMEWORK</span>
                  <span class="variable-value">{projectFramework}</span>
                </div>
              {/if}
            </div>
          </div>
        </div>

        <div class="modal-footer">
          <Button variant="outline" on:click={() => showExecutionModal = false}>
            Cancel
          </Button>
          <Button on:click={executePipeline} disabled={isLoading}>
            <Icon icon="mdi:play" class="w-4 h-4 mr-2" />
            {isLoading ? 'Starting...' : 'Run Pipeline'}
          </Button>
        </div>
      </div>
    </div>[36m
  {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/pipeline/PipelineExecutor.svelte[39m:309:5
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m  {#if showExecutionModal && selectedPipeline}
    [35m<div class="modal-overlay" onclick={() => showExecutionModal = false}>
      <div class="modal-content" onclick={(e) => e.stopPropagation()}>
        <div class="modal-header">
          <h3>Run Pipeline: {selectedPipeline.name}</h3>
          <button class="modal-close" onclick={() => showExecutionModal = false}>
            <Icon icon="mdi:close" class="w-5 h-5" />
          </button>
        </div>

        <div class="modal-body">
          <p class="pipeline-description">{selectedPipeline.description}</p>
          
          {#if selectedPipeline.variables.length > 0}
            <div class="variables-section">
              <h4>Pipeline Variables</h4>
              <div class="variables-list">
                {#each selectedPipeline.variables as variable}
                  <div class="variable-item">
                    <label for={variable.name}>
                      {variable.name}
                      {#if variable.required}
                        <span class="required">*</span>
                      {/if}
                    </label>
                    {#if variable.description}
                      <p class="variable-description">{variable.description}</p>
                    {/if}
                    
                    {#if variable.type === 'boolean'}
                      <label class="checkbox-label">
                        <input
                          type="checkbox"
                          bind:checked={variableValues[variable.name]}
                        />
                        {variable.name}
                      </label>
                    {:else if variable.type === 'select' && variable.options}
                      <select
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        class="form-select"
                        required={variable.required}
                      >
                        <option value="">Select {variable.name}</option>
                        {#each variable.options as option}
                          <option value={option}>{option}</option>
                        {/each}
                      </select>
                    {:else if variable.type === 'number'}
                      <input
                        type="number"
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        placeholder={variable.defaultValue?.toString() || `Enter ${variable.name}`}
                        class="form-input"
                        required={variable.required}
                      />
                    {:else}
                      <input
                        type="text"
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        placeholder={variable.defaultValue?.toString() || `Enter ${variable.name}`}
                        class="form-input"
                        required={variable.required}
                      />
                    {/if}
                  </div>
                {/each}
              </div>
            </div>
          {:else}
            <p class="no-variables">This pipeline has no configurable variables.</p>
          {/if}

          <div class="runtime-variables">
            <h4>Runtime Variables</h4>
            <p class="runtime-info">These variables will be automatically provided:</p>
            <div class="runtime-list">
              <div class="runtime-item">
                <span class="variable-name">PROJECT_NAME</span>
                <span class="variable-value">{projectName}</span>
              </div>
              <div class="runtime-item">
                <span class="variable-name">PROJECT_PATH</span>
                <span class="variable-value">{projectPath}</span>
              </div>
              <div class="runtime-item">
                <span class="variable-name">PROJECT_NAMESPACE</span>
                <span class="variable-value">{projectNamespace}</span>
              </div>
              {#if projectFramework}
                <div class="runtime-item">
                  <span class="variable-name">PROJECT_FRAMEWORK</span>
                  <span class="variable-value">{projectFramework}</span>
                </div>
              {/if}
            </div>
          </div>
        </div>

        <div class="modal-footer">
          <Button variant="outline" on:click={() => showExecutionModal = false}>
            Cancel
          </Button>
          <Button on:click={executePipeline} disabled={isLoading}>
            <Icon icon="mdi:play" class="w-4 h-4 mr-2" />
            {isLoading ? 'Starting...' : 'Run Pipeline'}
          </Button>
        </div>
      </div>
    </div>[36m
  {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/pipeline/PipelineExecutor.svelte[39m:310:7
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m    <div class="modal-overlay" onclick={() => showExecutionModal = false}>
      [35m<div class="modal-content" onclick={(e) => e.stopPropagation()}>
        <div class="modal-header">
          <h3>Run Pipeline: {selectedPipeline.name}</h3>
          <button class="modal-close" onclick={() => showExecutionModal = false}>
            <Icon icon="mdi:close" class="w-5 h-5" />
          </button>
        </div>

        <div class="modal-body">
          <p class="pipeline-description">{selectedPipeline.description}</p>
          
          {#if selectedPipeline.variables.length > 0}
            <div class="variables-section">
              <h4>Pipeline Variables</h4>
              <div class="variables-list">
                {#each selectedPipeline.variables as variable}
                  <div class="variable-item">
                    <label for={variable.name}>
                      {variable.name}
                      {#if variable.required}
                        <span class="required">*</span>
                      {/if}
                    </label>
                    {#if variable.description}
                      <p class="variable-description">{variable.description}</p>
                    {/if}
                    
                    {#if variable.type === 'boolean'}
                      <label class="checkbox-label">
                        <input
                          type="checkbox"
                          bind:checked={variableValues[variable.name]}
                        />
                        {variable.name}
                      </label>
                    {:else if variable.type === 'select' && variable.options}
                      <select
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        class="form-select"
                        required={variable.required}
                      >
                        <option value="">Select {variable.name}</option>
                        {#each variable.options as option}
                          <option value={option}>{option}</option>
                        {/each}
                      </select>
                    {:else if variable.type === 'number'}
                      <input
                        type="number"
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        placeholder={variable.defaultValue?.toString() || `Enter ${variable.name}`}
                        class="form-input"
                        required={variable.required}
                      />
                    {:else}
                      <input
                        type="text"
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        placeholder={variable.defaultValue?.toString() || `Enter ${variable.name}`}
                        class="form-input"
                        required={variable.required}
                      />
                    {/if}
                  </div>
                {/each}
              </div>
            </div>
          {:else}
            <p class="no-variables">This pipeline has no configurable variables.</p>
          {/if}

          <div class="runtime-variables">
            <h4>Runtime Variables</h4>
            <p class="runtime-info">These variables will be automatically provided:</p>
            <div class="runtime-list">
              <div class="runtime-item">
                <span class="variable-name">PROJECT_NAME</span>
                <span class="variable-value">{projectName}</span>
              </div>
              <div class="runtime-item">
                <span class="variable-name">PROJECT_PATH</span>
                <span class="variable-value">{projectPath}</span>
              </div>
              <div class="runtime-item">
                <span class="variable-name">PROJECT_NAMESPACE</span>
                <span class="variable-value">{projectNamespace}</span>
              </div>
              {#if projectFramework}
                <div class="runtime-item">
                  <span class="variable-name">PROJECT_FRAMEWORK</span>
                  <span class="variable-value">{projectFramework}</span>
                </div>
              {/if}
            </div>
          </div>
        </div>

        <div class="modal-footer">
          <Button variant="outline" on:click={() => showExecutionModal = false}>
            Cancel
          </Button>
          <Button on:click={executePipeline} disabled={isLoading}>
            <Icon icon="mdi:play" class="w-4 h-4 mr-2" />
            {isLoading ? 'Starting...' : 'Run Pipeline'}
          </Button>
        </div>
      </div>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/pipeline/PipelineExecutor.svelte[39m:310:7
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m    <div class="modal-overlay" onclick={() => showExecutionModal = false}>
      [35m<div class="modal-content" onclick={(e) => e.stopPropagation()}>
        <div class="modal-header">
          <h3>Run Pipeline: {selectedPipeline.name}</h3>
          <button class="modal-close" onclick={() => showExecutionModal = false}>
            <Icon icon="mdi:close" class="w-5 h-5" />
          </button>
        </div>

        <div class="modal-body">
          <p class="pipeline-description">{selectedPipeline.description}</p>
          
          {#if selectedPipeline.variables.length > 0}
            <div class="variables-section">
              <h4>Pipeline Variables</h4>
              <div class="variables-list">
                {#each selectedPipeline.variables as variable}
                  <div class="variable-item">
                    <label for={variable.name}>
                      {variable.name}
                      {#if variable.required}
                        <span class="required">*</span>
                      {/if}
                    </label>
                    {#if variable.description}
                      <p class="variable-description">{variable.description}</p>
                    {/if}
                    
                    {#if variable.type === 'boolean'}
                      <label class="checkbox-label">
                        <input
                          type="checkbox"
                          bind:checked={variableValues[variable.name]}
                        />
                        {variable.name}
                      </label>
                    {:else if variable.type === 'select' && variable.options}
                      <select
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        class="form-select"
                        required={variable.required}
                      >
                        <option value="">Select {variable.name}</option>
                        {#each variable.options as option}
                          <option value={option}>{option}</option>
                        {/each}
                      </select>
                    {:else if variable.type === 'number'}
                      <input
                        type="number"
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        placeholder={variable.defaultValue?.toString() || `Enter ${variable.name}`}
                        class="form-input"
                        required={variable.required}
                      />
                    {:else}
                      <input
                        type="text"
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        placeholder={variable.defaultValue?.toString() || `Enter ${variable.name}`}
                        class="form-input"
                        required={variable.required}
                      />
                    {/if}
                  </div>
                {/each}
              </div>
            </div>
          {:else}
            <p class="no-variables">This pipeline has no configurable variables.</p>
          {/if}

          <div class="runtime-variables">
            <h4>Runtime Variables</h4>
            <p class="runtime-info">These variables will be automatically provided:</p>
            <div class="runtime-list">
              <div class="runtime-item">
                <span class="variable-name">PROJECT_NAME</span>
                <span class="variable-value">{projectName}</span>
              </div>
              <div class="runtime-item">
                <span class="variable-name">PROJECT_PATH</span>
                <span class="variable-value">{projectPath}</span>
              </div>
              <div class="runtime-item">
                <span class="variable-name">PROJECT_NAMESPACE</span>
                <span class="variable-value">{projectNamespace}</span>
              </div>
              {#if projectFramework}
                <div class="runtime-item">
                  <span class="variable-name">PROJECT_FRAMEWORK</span>
                  <span class="variable-value">{projectFramework}</span>
                </div>
              {/if}
            </div>
          </div>
        </div>

        <div class="modal-footer">
          <Button variant="outline" on:click={() => showExecutionModal = false}>
            Cancel
          </Button>
          <Button on:click={executePipeline} disabled={isLoading}>
            <Icon icon="mdi:play" class="w-4 h-4 mr-2" />
            {isLoading ? 'Starting...' : 'Run Pipeline'}
          </Button>
        </div>
      </div>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/pipeline/PipelineExecutor.svelte[39m:426:7
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m    <div class="modal-overlay">
      [35m<div class="modal-content progress-modal" onclick={(e) => e.stopPropagation()}>
        <div class="modal-header">
          <h3>Pipeline Execution Progress</h3>
          <button class="modal-close" onclick={closeProgressModal}>
            <Icon icon="mdi:close" class="w-5 h-5" />
          </button>
        </div>

        <div class="modal-body">
          <div class="execution-info">
            <div class="execution-header">
              <Icon icon={getStatusIcon(progress.status)} class="w-6 h-6 {getStatusColor(progress.status)}" />
              <div class="execution-details">
                <h4>{selectedPipeline?.name}</h4>
                <p class="execution-status {getStatusColor(progress.status)}">
                  {progress.status.charAt(0).toUpperCase() + progress.status.slice(1)}
                </p>
              </div>
            </div>

            <div class="progress-bar">
              <div class="progress-fill" style="width: {progress.progress}%"></div>
            </div>
            <p class="progress-text">{progress.progress}% complete ({progress.completedSteps}/{progress.totalSteps} steps)</p>

            {#if progress.estimatedTimeRemaining}
              <p class="eta">Estimated time remaining: {formatDuration(progress.estimatedTimeRemaining * 1000)}</p>
            {/if}
          </div>

          <div class="steps-progress">
            <h4>Step Progress</h4>
            <div class="steps-list">
              {#each progress.steps as step}
                <div class="step-item">
                  <div class="step-header">
                    <Icon icon={getStatusIcon(step.status)} class="w-4 h-4 {getStatusColor(step.status)}" />
                    <span class="step-name">{step.name}</span>
                    {#if step.duration}
                      <span class="step-duration">{formatDuration(step.duration)}</span>
                    {/if}
                  </div>
                  {#if step.message}
                    <p class="step-message">{step.message}</p>
                  {/if}
                  {#if step.progress !== undefined}
                    <div class="step-progress-bar">
                      <div class="step-progress-fill" style="width: {step.progress}%"></div>
                    </div>
                  {/if}
                </div>
              {/each}
            </div>
          </div>
        </div>

        <div class="modal-footer">
          {#if progress.status === 'running'}
            <Button variant="outline" on:click={cancelExecution}>
              <Icon icon="mdi:cancel" class="w-4 h-4 mr-2" />
              Cancel Execution
            </Button>
          {:else}
            <Button on:click={closeProgressModal}>
              Close
            </Button>
          {/if}
        </div>
      </div>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/pipeline/PipelineExecutor.svelte[39m:426:7
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m    <div class="modal-overlay">
      [35m<div class="modal-content progress-modal" onclick={(e) => e.stopPropagation()}>
        <div class="modal-header">
          <h3>Pipeline Execution Progress</h3>
          <button class="modal-close" onclick={closeProgressModal}>
            <Icon icon="mdi:close" class="w-5 h-5" />
          </button>
        </div>

        <div class="modal-body">
          <div class="execution-info">
            <div class="execution-header">
              <Icon icon={getStatusIcon(progress.status)} class="w-6 h-6 {getStatusColor(progress.status)}" />
              <div class="execution-details">
                <h4>{selectedPipeline?.name}</h4>
                <p class="execution-status {getStatusColor(progress.status)}">
                  {progress.status.charAt(0).toUpperCase() + progress.status.slice(1)}
                </p>
              </div>
            </div>

            <div class="progress-bar">
              <div class="progress-fill" style="width: {progress.progress}%"></div>
            </div>
            <p class="progress-text">{progress.progress}% complete ({progress.completedSteps}/{progress.totalSteps} steps)</p>

            {#if progress.estimatedTimeRemaining}
              <p class="eta">Estimated time remaining: {formatDuration(progress.estimatedTimeRemaining * 1000)}</p>
            {/if}
          </div>

          <div class="steps-progress">
            <h4>Step Progress</h4>
            <div class="steps-list">
              {#each progress.steps as step}
                <div class="step-item">
                  <div class="step-header">
                    <Icon icon={getStatusIcon(step.status)} class="w-4 h-4 {getStatusColor(step.status)}" />
                    <span class="step-name">{step.name}</span>
                    {#if step.duration}
                      <span class="step-duration">{formatDuration(step.duration)}</span>
                    {/if}
                  </div>
                  {#if step.message}
                    <p class="step-message">{step.message}</p>
                  {/if}
                  {#if step.progress !== undefined}
                    <div class="step-progress-bar">
                      <div class="step-progress-fill" style="width: {step.progress}%"></div>
                    </div>
                  {/if}
                </div>
              {/each}
            </div>
          </div>
        </div>

        <div class="modal-footer">
          {#if progress.status === 'running'}
            <Button variant="outline" on:click={cancelExecution}>
              <Icon icon="mdi:cancel" class="w-4 h-4 mr-2" />
              Cancel Execution
            </Button>
          {:else}
            <Button on:click={closeProgressModal}>
              Close
            </Button>
          {/if}
        </div>
      </div>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/tasks/TaskItem.svelte[39m:262:7
[33mWarn[39m: `<svelte:self>` is deprecated — use self-imports (e.g. `import Self from './Self.svelte'`) instead
https://svelte.dev/e/svelte_self_deprecated (svelte)
[36m    {#each task.subtasks as subtask (subtask.id)}
      [35m<svelte:self 
        task={subtask} 
        depth={depth + 1} 
        showSubtasks={showSubtasks}
      />[36m
    {/each}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/tasks/TaskPage.svelte[39m:238:13
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m          <div>
            [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Color
            </label>[36m
            <div class="flex flex-wrap gap-2">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/tasks/TaskManager.svelte[39m:147:13
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m          <div>
            [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Group Name
            </label>[36m
            <input[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/tasks/TaskManager.svelte[39m:159:13
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m          <div>
            [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Description (optional)
            </label>[36m
            <textarea[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/tasks/TaskManager.svelte[39m:171:13
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m          <div>
            [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Color
            </label>[36m
            <div class="flex flex-wrap gap-2">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/tasks/TaskManager.svelte[39m:176:17
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m              {#each colorOptions as color}
                [35m<button
                  onclick={() => newGroupColor = color}
                  class="w-8 h-8 rounded-full border-2 transition-all {newGroupColor === color ? 'border-gray-900 dark:border-gray-100 scale-110' : 'border-gray-300 dark:border-gray-600 hover:scale-105'}"
                  style="background-color: {color}"
                ></button>[36m
              {/each}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/tasks/ProjectTaskManager.svelte[39m:154:11
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m        <div>
          [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Group Name
          </label>[36m
          <input[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/tasks/ProjectTaskManager.svelte[39m:166:11
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m        <div>
          [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Description (optional)
          </label>[36m
          <textarea[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/tasks/ProjectTaskManager.svelte[39m:178:11
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m        <div>
          [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Color
          </label>[36m
          <div class="flex flex-wrap gap-2">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/tasks/ProjectTaskManager.svelte[39m:183:15
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m            {#each colorOptions as color}
              [35m<button
                onclick={() => newGroupColor = color}
                class="w-8 h-8 rounded-full border-2 transition-all {newGroupColor === color ? 'border-gray-900 dark:border-gray-100 scale-110' : 'border-gray-300 dark:border-gray-600 hover:scale-105'}"
                style="background-color: {color}"
              ></button>[36m
            {/each}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table.svelte[39m:11:5
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m  <table class="w-full caption-bottom text-sm">
    [35m<slot />[36m
  </table>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table-header.svelte[39m:10:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<thead class={cn("[&_tr]:border-b", className)}>
  [35m<slot />[36m
</thead>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table-body.svelte[39m:10:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<tbody class={cn("[&_tr:last-child]:border-0", className)}>
  [35m<slot />[36m
</tbody>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table-row.svelte[39m:10:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<tr class={cn("border-b transition-colors hover:bg-slate-50 dark:hover:bg-slate-800/50 data-[state=selected]:bg-slate-50 dark:data-[state=selected]:bg-slate-800", className)}>
  [35m<slot />[36m
</tr>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table-head.svelte[39m:10:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<th class={cn("h-12 px-4 text-left align-middle font-medium text-slate-500 dark:text-slate-400 [&:has([role=checkbox])]:pr-0", className)}>
  [35m<slot />[36m
</th>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/table-cell.svelte[39m:10:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m<td class={cn("p-4 align-middle [&:has([role=checkbox])]:pr-0", className)}>
  [35m<slot />[36m
</td>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/PodsTable.svelte[39m:143:19
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                <div class="flex items-center space-x-1">
                  [35m<button 
                    onclick={() => handleViewPod(pod)}
                    class="p-2 text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded-lg transition-all duration-200 hover:scale-105"
                    title="View Pod Details"
                  >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                    </svg>
                  </button>[36m
                  <button[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/PodsTable.svelte[39m:153:19
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                  </button>
                  [35m<button 
                    onclick={() => handleViewLogs(pod)}
                    class="p-2 text-green-600 hover:text-green-800 dark:text-green-400 dark:hover:text-green-300 hover:bg-green-50 dark:hover:bg-green-900/20 rounded-lg transition-all duration-200 hover:scale-105"
                    title="View Pod Logs"
                  >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                    </svg>
                  </button>[36m
                  <button[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/PodsTable.svelte[39m:162:19
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                  </button>
                  [35m<button 
                    onclick={() => handleCopyPodName(pod)}
                    class="p-2 text-slate-600 hover:text-slate-800 dark:text-slate-400 dark:hover:text-slate-300 hover:bg-slate-50 dark:hover:bg-slate-700/50 rounded-lg transition-all duration-200 hover:scale-105"
                    title="Copy Pod Name"
                  >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                    </svg>
                  </button>[36m
                </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/DeploymentsFilters.svelte[39m:63:5
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m  <div class="flex items-center gap-2">
    [35m<label class="text-sm font-medium text-slate-700 dark:text-slate-300 whitespace-nowrap">
      Status:
    </label>[36m
    <select[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/DeploymentsTable.svelte[39m:215:21
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                    <!-- Stop button - only show when running -->
                    [35m<button 
                      onclick={() => handleStopDeployment(deployment)}
                      class="p-2 text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-lg transition-all duration-200 hover:scale-105"
                      title="Stop Deployment (Scale to 0)"
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 10a1 1 0 011-1h4a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 01-1-1v-4z"></path>
                      </svg>
                    </button>[36m
                  {:else if deployment.replicas === 0}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/DeploymentsTable.svelte[39m:227:21
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                    <!-- Start button - only show when stopped (0 replicas) -->
                    [35m<button 
                      onclick={() => handleStartDeployment(deployment)}
                      class="p-2 text-green-600 hover:text-green-800 dark:text-green-400 dark:hover:text-green-300 hover:bg-green-50 dark:hover:bg-green-900/20 rounded-lg transition-all duration-200 hover:scale-105"
                      title="Start Deployment (Scale to 1)"
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                      </svg>
                    </button>[36m
                  {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/DeploymentsTable.svelte[39m:240:21
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                    <!-- Restart button - only show when running or updating -->
                    [35m<button 
                      onclick={() => handleRestartDeployment(deployment)}
                      class="p-2 text-yellow-600 hover:text-yellow-800 dark:text-yellow-400 dark:hover:text-yellow-300 hover:bg-yellow-50 dark:hover:bg-yellow-900/20 rounded-lg transition-all duration-200 hover:scale-105"
                      title="Restart Deployment"
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                      </svg>
                    </button>[36m
                  {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/DeploymentsTable.svelte[39m:251:19
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                  
                  [35m<button 
                    onclick={() => handleViewDeployment(deployment)}
                    class="p-2 text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded-lg transition-all duration-200 hover:scale-105"
                    title="View Deployment Details"
                  >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                    </svg>
                  </button>[36m
                </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/LogEntry.svelte[39m:221:11
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m        <div class="flex items-center space-x-1">
          [35m<button
            onclick={handlePinStartTime}
            class="p-0.5 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 rounded hover:bg-blue-50 dark:hover:bg-blue-900/20"
            title="Pin as start time"
          >
            <svg class="w-2.5 h-2.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2m-9 0h10m-10 0a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V6a2 2 0 00-2-2"></path>
            </svg>
          </button>[36m
          <button[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/LogEntry.svelte[39m:230:11
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m          </button>
          [35m<button
            onclick={handlePinEndTime}
            class="p-0.5 text-green-600 hover:text-green-700 dark:text-green-400 dark:hover:text-green-300 rounded hover:bg-green-50 dark:hover:bg-green-900/20"
            title="Pin as end time"
          >
            <svg class="w-2.5 h-2.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"></path>
            </svg>
          </button>[36m
        </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/LogEntry.svelte[39m:270:11
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m        <div class="flex items-center space-x-1">
          [35m<button
            onclick={handlePinStartTime}
            class="p-1 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 rounded hover:bg-blue-50 dark:hover:bg-blue-900/20"
            title="Pin as start time"
          >
            <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2m-9 0h10m-10 0a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V6a2 2 0 00-2-2"></path>
            </svg>
          </button>[36m
          <button[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/LogEntry.svelte[39m:279:11
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m          </button>
          [35m<button
            onclick={handlePinEndTime}
            class="p-1 text-green-600 hover:text-green-700 dark:text-green-400 dark:hover:text-green-300 rounded hover:bg-green-50 dark:hover:bg-green-900/20"
            title="Pin as end time"
          >
            <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"></path>
            </svg>
          </button>[36m
        </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/LogEntry.svelte[39m:360:9
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m        </div>
        [35m<button
          onclick={() => copyToClipboard(structuredFields?.message || parsedLog.rawMessage)}
          class="ml-2 p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"
          title="Copy message"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
          </svg>
        </button>[36m
      </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/LogEntry.svelte[39m:402:9
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m        </div>
        [35m<button
          onclick={() => copyToClipboard(`[${new Date(log.timestamp).toLocaleTimeString()}] [${log.level}] ${parsedLog.rawMessage}`)}
          class="ml-2 p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"
          title="Copy raw log"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
          </svg>
        </button>[36m
      </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/LogEntry.svelte[39m:464:9
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m        <!-- Copy button for compact view -->
        [35m<button
          onclick={() => copyToClipboard(structuredFields?.message || parsedLog.rawMessage)}
          class="p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"
          title="Copy message"
        >
          <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
          </svg>
        </button>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/LogEntry.svelte[39m:549:15
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m              </div>
              [35m<button
                onclick={() => copyToClipboard(structuredFields.message)}
                class="ml-2 p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"
                title="Copy message"
              >
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                </svg>
              </button>[36m
            </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/LogEntry.svelte[39m:581:17
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                </button>
                [35m<button
                  onclick={() => copyToClipboard(extractDeploymentName()!)}
                  class="ml-1 p-0.5 text-slate-400 hover:text-slate-600 dark:text-slate-500 dark:hover:text-slate-300"
                  title="Copy deployment name"
                >
                  <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                  </svg>
                </button>[36m
              </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/LogEntry.svelte[39m:740:13
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m            <span>Additional Fields ({Object.keys(structuredFields.other).length})</span>
            [35m<button
              onclick={(e) => {
                e.stopPropagation();
                copyToClipboard(JSON.stringify(structuredFields.other, null, 2));
              }}
              class="p-1 text-slate-400 hover:text-slate-600 dark:text-slate-500 dark:hover:text-slate-300 flex-shrink-0"
              title="Copy all additional fields as JSON"
            >
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
              </svg>
            </button>[36m
          </summary>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/LogEntry.svelte[39m:786:19
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                  </div>
                  [35m<button
                    onclick={() => copyToClipboard(`${key}: ${formatValue(value)}`)}
                    class="ml-2 p-1 text-slate-400 hover:text-slate-600 dark:text-slate-500 dark:hover:text-slate-300 flex-shrink-0"
                    title="Copy {key}: {formatValue(value)}"
                  >
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                    </svg>
                  </button>[36m
                </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/LogsDisplay.svelte[39m:140:15
[31mError[39m: Mixing old (on:click) and new syntaxes for event handling is not allowed. Use only the onclick syntax
https://svelte.dev/e/mixed_event_handler_syntaxes (svelte)
[36m            <button
              [35mon:click={() => viewMode = 'detailed'}[36m
              class="flex items-center space-x-1 px-2 py-1 text-xs rounded {viewMode === 'detailed' ? 'bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-300' : 'text-slate-600 dark:text-slate-400 hover:text-slate-900 dark:hover:text-white'}"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NamespaceSelector.svelte[39m:143:3
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m<div class={containerClasses}>
  [35m<label class={labelClasses}>
    {variant === 'sidebar' ? 'Select Namespace:' : 'Namespace:'}
  </label>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NamespaceSelector.svelte[39m:190:11
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m          <!-- All Namespaces Option -->
          [35m<div 
            class={optionClasses}
            onclick={() => handleNamespaceChange("")}
          >
            <span class="flex items-center">
              <span class="mr-2">🌐</span>
              All Namespaces
            </span>
          </div>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NamespaceSelector.svelte[39m:190:11
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m          <!-- All Namespaces Option -->
          [35m<div 
            class={optionClasses}
            onclick={() => handleNamespaceChange("")}
          >
            <span class="flex items-center">
              <span class="mr-2">🌐</span>
              All Namespaces
            </span>
          </div>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NamespaceSelector.svelte[39m:202:13
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m          {#each displayNamespaces as namespace}
            [35m<div 
              class={optionClasses}
              onclick={() => handleNamespaceChange(namespace.name)}
            >
              <span class="flex items-center">
                <span class="mr-2">{starredNamespaces.includes(namespace.name) ? '⭐' : '⚙️'}</span>
                <span class="flex-1">{namespace.name}</span>
                <span class="text-xs opacity-70">({namespace.status})</span>
              </span>
            </div>[36m
          {/each}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NamespaceSelector.svelte[39m:202:13
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m          {#each displayNamespaces as namespace}
            [35m<div 
              class={optionClasses}
              onclick={() => handleNamespaceChange(namespace.name)}
            >
              <span class="flex items-center">
                <span class="mr-2">{starredNamespaces.includes(namespace.name) ? '⭐' : '⚙️'}</span>
                <span class="flex-1">{namespace.name}</span>
                <span class="text-xs opacity-70">({namespace.status})</span>
              </span>
            </div>[36m
          {/each}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NamespaceSelector.svelte[39m:68:31
[31mError[39m: Property 'filter' does not exist on type '() => any'. (ts)
[36m    if (!searchQuery) return filteredNamespaces;
    return filteredNamespaces.[35mfilter[36m((ns: K8sNamespace) => 
      ns.name.toLowerCase().includes(searchQuery.toLowerCase())[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NamespaceSelector.svelte[39m:104:35
[31mError[39m: Property 'find' does not exist on type '() => any'. (ts)
[36m    if (!currentSelectedNamespace) return "All Namespaces";
    const ns = filteredNamespaces.[35mfind[36m(n => n.name === currentSelectedNamespace);
    if (!ns) return currentSelectedNamespace;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NamespaceSelector.svelte[39m:104:40
[31mError[39m: Parameter 'n' implicitly has an 'any' type. (ts)
[36m    if (!currentSelectedNamespace) return "All Namespaces";
    const ns = filteredNamespaces.find([35mn[36m => n.name === currentSelectedNamespace);
    if (!ns) return currentSelectedNamespace;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NamespaceSelector.svelte[39m:201:18
[31mError[39m: Argument of type '() => any' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m          <!-- Namespace Options -->
          {#each [35mdisplayNamespaces[36m as namespace}
            <div[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NamespaceSelector.svelte[39m:204:52
[31mError[39m: 'namespace' is of type 'unknown'. (ts)
[36m              class={optionClasses}
              onclick={() => handleNamespaceChange([35mnamespace[36m.name)}
            >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NamespaceSelector.svelte[39m:207:64
[31mError[39m: 'namespace' is of type 'unknown'. (ts)
[36m              <span class="flex items-center">
                <span class="mr-2">{starredNamespaces.includes([35mnamespace[36m.name) ? '⭐' : '⚙️'}</span>
                <span class="flex-1">{namespace.name}</span>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NamespaceSelector.svelte[39m:208:39
[31mError[39m: 'namespace' is of type 'unknown'. (ts)
[36m                <span class="mr-2">{starredNamespaces.includes(namespace.name) ? '⭐' : '⚙️'}</span>
                <span class="flex-1">{[35mnamespace[36m.name}</span>
                <span class="text-xs opacity-70">({namespace.status})</span>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NamespaceSelector.svelte[39m:209:52
[31mError[39m: 'namespace' is of type 'unknown'. (ts)
[36m                <span class="flex-1">{namespace.name}</span>
                <span class="text-xs opacity-70">({[35mnamespace[36m.status})</span>
              </span>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/DeploymentSelector.svelte[39m:87:3
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m<div class="space-y-2">
  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300">
    Deployments ({selectedDeployments.length} selected)
  </label>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/PodSelector.svelte[39m:87:3
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m<div class="space-y-2">
  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300">
    Pods ({selectedPods.length} selected)
  </label>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/SeveritySelector.svelte[39m:65:3
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m<div class="space-y-2">
  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300">
    Severity Level
  </label>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TimeFilter.svelte[39m:177:11
[33mWarn[39m: Using `on:change` to listen to the change event is deprecated. Use the event attribute `onchange` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          value={startTime || ''}
          [35mon:change={(e) => {
            const target = e.target as HTMLInputElement;
            startTime = target.value || null;
            handleStartTimeChange();
          }}[36m
          class="w-full px-2 py-1 text-xs border border-slate-300 dark:border-slate-600 rounded-md bg-white dark:bg-slate-800 text-slate-900 dark:text-white focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TimeFilter.svelte[39m:195:11
[33mWarn[39m: Using `on:change` to listen to the change event is deprecated. Use the event attribute `onchange` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          value={endTime || ''}
          [35mon:change={(e) => {
            const target = e.target as HTMLInputElement;
            endTime = target.value || null;
            handleEndTimeChange();
          }}[36m
          class="w-full px-2 py-1 text-xs border border-slate-300 dark:border-slate-600 rounded-md bg-white dark:bg-slate-800 text-slate-900 dark:text-white focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/AdvancedSearchPanel.svelte[39m:152:7
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m    {#if searchQuery}
      [35m<button
        onclick={clearSearch}
        class="px-3 py-2 text-sm text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300"
        title="Clear search"
      >
        <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>[36m
    {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/AdvancedSearchPanel.svelte[39m:170:11
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m        {#each searchExamples as example}
          [35m<div class="p-2 border border-slate-200 dark:border-slate-700 rounded bg-slate-50 dark:bg-slate-900 hover:bg-slate-100 dark:hover:bg-slate-800 cursor-pointer"
               onclick={() => useExample(example.query)}>
            <div class="text-xs font-mono text-blue-600 dark:text-blue-400 mb-1">
              {example.query}
            </div>
            <div class="text-xs text-slate-600 dark:text-slate-400">
              {example.description}
            </div>
          </div>[36m
        {/each}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/AdvancedSearchPanel.svelte[39m:170:11
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m        {#each searchExamples as example}
          [35m<div class="p-2 border border-slate-200 dark:border-slate-700 rounded bg-slate-50 dark:bg-slate-900 hover:bg-slate-100 dark:hover:bg-slate-800 cursor-pointer"
               onclick={() => useExample(example.query)}>
            <div class="text-xs font-mono text-blue-600 dark:text-blue-400 mb-1">
              {example.query}
            </div>
            <div class="text-xs text-slate-600 dark:text-slate-400">
              {example.description}
            </div>
          </div>[36m
        {/each}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/AdvancedSearchPanel.svelte[39m:17:7
[33mWarn[39m: `showAdvancedSearch` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m
  let [35mshowAdvancedSearch[36m = false;
  let searchExamples = [[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogsViewerContent.svelte[39m:358:21
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                  <button
                    [35monClick[36m={() => {
                      selectedDeployments = selectedDeployments.filter(d => d !== deployment);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogsViewerContent.svelte[39m:377:21
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                  <button
                    [35monClick[36m={() => {
                      selectedPods = selectedPods.filter(p => p !== pod);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogsViewerContent.svelte[39m:396:21
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                  <button
                    [35monClick[36m={() => {
                      severityFilter = "";[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogsViewerContent.svelte[39m:415:21
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                  <button
                    [35monClick[36m={() => {
                      traceIdFilter = "";[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogsViewerContent.svelte[39m:434:21
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                  <button
                    [35monClick[36m={() => {
                      searchQuery = "";[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogsDisplay.svelte[39m:84:7
[33mWarn[39m: `viewMode` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let logsContainerRef: HTMLElement | null = null;
  let [35mviewMode: 'detailed' | 'compact' | 'raw' | 'lean'[36m = 'detailed';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogsDisplay.svelte[39m:61:45
[31mError[39m: Parameter 'log' implicitly has an 'any' type. (ts)
[36m  // Filter logs based on severity
  const filteredLogs = $derived(logs.filter([35mlog[36m => {
    if (!severityFilter) return true;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogsDisplay.svelte[39m:161:49
[31mError[39m: 'e.target' is possibly 'null'. (ts)
[36m          value={logCount} 
          onchange={(e) => setLogCount(parseInt([35me.target[36m.value))}
        >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogsDisplay.svelte[39m:161:58
[31mError[39m: Property 'value' does not exist on type 'EventTarget'. (ts)
[36m          value={logCount} 
          onchange={(e) => setLogCount(parseInt(e.target.[35mvalue[36m))}
        >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogsDisplay.svelte[39m:264:14
[31mError[39m: Object literal may only specify known properties, and 'namespace' does not exist in type '$$ComponentProps'. (ts)
[36m            {viewMode}
            {[35mnamespace[36m}
            on:traceIdClick={handleTraceIdFilter}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:237:11
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m        <div class="flex items-center space-x-1">
          [35m<button
            onClick={handlePinStartTime}
            class="p-0.5 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 rounded hover:bg-blue-50 dark:hover:bg-blue-900/20"
            title="Pin as start time"
          >
            <svg class="w-2.5 h-2.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2m-9 0h10m-10 0a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V6a2 2 0 00-2-2"></path>
            </svg>
          </button>[36m
          <button[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:246:11
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m          </button>
          [35m<button
            onClick={handlePinEndTime}
            class="p-0.5 text-green-600 hover:text-green-700 dark:text-green-400 dark:hover:text-green-300 rounded hover:bg-green-50 dark:hover:bg-green-900/20"
            title="Pin as end time"
          >
            <svg class="w-2.5 h-2.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"></path>
            </svg>
          </button>[36m
        </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:286:11
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m        <div class="flex items-center space-x-1">
          [35m<button
            onClick={handlePinStartTime}
            class="p-1 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 rounded hover:bg-blue-50 dark:hover:bg-blue-900/20"
            title="Pin as start time"
          >
            <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2m-9 0h10m-10 0a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V6a2 2 0 00-2-2"></path>
            </svg>
          </button>[36m
          <button[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:295:11
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m          </button>
          [35m<button
            onClick={handlePinEndTime}
            class="p-1 text-green-600 hover:text-green-700 dark:text-green-400 dark:hover:text-green-300 rounded hover:bg-green-50 dark:hover:bg-green-900/20"
            title="Pin as end time"
          >
            <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"></path>
            </svg>
          </button>[36m
        </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:376:9
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m        </div>
        [35m<button
          onClick={() => copyToClipboard(structuredFields?.message || parsedLog.rawMessage)}
          class="ml-2 p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"
          title="Copy message"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
          </svg>
        </button>[36m
      </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:418:9
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m        </div>
        [35m<button
          onClick={() => copyToClipboard(`[${new Date(log.timestamp).toLocaleTimeString()}] [${log.level}] ${parsedLog.rawMessage}`)}
          class="ml-2 p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"
          title="Copy raw log"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
          </svg>
        </button>[36m
      </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:480:9
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m        <!-- Copy button for compact view -->
        [35m<button
          onClick={() => copyToClipboard(structuredFields?.message || parsedLog.rawMessage)}
          class="p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"
          title="Copy message"
        >
          <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
          </svg>
        </button>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:565:15
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m              </div>
              [35m<button
                onClick={() => copyToClipboard(structuredFields.message)}
                class="ml-2 p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"
                title="Copy message"
              >
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                </svg>
              </button>[36m
            </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:597:17
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                </button>
                [35m<button
                  onClick={() => copyToClipboard(extractDeploymentName()!)}
                  class="ml-1 p-0.5 text-slate-400 hover:text-slate-600 dark:text-slate-500 dark:hover:text-slate-300"
                  title="Copy deployment name"
                >
                  <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                  </svg>
                </button>[36m
              </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:756:13
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m            <span>Additional Fields ({Object.keys(structuredFields.other).length})</span>
            [35m<button
              onClick={(e) => {
                e.stopPropagation();
                copyToClipboard(JSON.stringify(structuredFields.other, null, 2));
              }}
              class="p-1 text-slate-400 hover:text-slate-600 dark:text-slate-500 dark:hover:text-slate-300 flex-shrink-0"
              title="Copy all additional fields as JSON"
            >
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
              </svg>
            </button>[36m
          </summary>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:802:19
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                  </div>
                  [35m<button
                    onClick={() => copyToClipboard(`${key}: ${formatValue(value)}`)}
                    class="ml-2 p-1 text-slate-400 hover:text-slate-600 dark:text-slate-500 dark:hover:text-slate-300 flex-shrink-0"
                    title="Copy {key}: {formatValue(value)}"
                  >
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                    </svg>
                  </button>[36m
                </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:136:7
[31mError[39m: Cannot find name 'logger'. (ts)
[36m    } catch (err) {
      [35mlogger[36m.error('Failed to copy text: ', err);
      toastStore.error('Failed to copy content to clipboard');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:1:10
[31mError[39m: Cannot find name 'logger'. (ts)
[36mimport { [35mlogger[36m } from '$lib/utils/logger';
<script lang="ts">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:212:11
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m        <button
          [35monClick[36m={() => handleSeverityClick(structuredFields?.severity || log.level)}
          class="text-xs font-medium px-1 py-0.5 rounded cursor-pointer hover:opacity-80 transition-opacity {getSeverityColor(structuredFields?.severity || log.level)}"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:227:13
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m          <button
            [35monClick[36m={() => handleDeploymentClick(extractDeploymentName()!)}
            class="text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:238:13
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m          <button
            [35monClick[36m={handlePinStartTime}
            class="p-0.5 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 rounded hover:bg-blue-50 dark:hover:bg-blue-900/20"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:247:13
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m          <button
            [35monClick[36m={handlePinEndTime}
            class="p-0.5 text-green-600 hover:text-green-700 dark:text-green-400 dark:hover:text-green-300 rounded hover:bg-green-50 dark:hover:bg-green-900/20"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:269:11
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m        <button
          [35monClick[36m={() => handleSeverityClick(structuredFields?.severity || log.level)}
          class="inline-flex items-center space-x-1 text-xs font-medium px-2 py-1 rounded-full cursor-pointer hover:scale-105 transition-all duration-200 shadow-sm {getSeverityColor(structuredFields?.severity || log.level)}"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:287:13
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m          <button
            [35monClick[36m={handlePinStartTime}
            class="p-1 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 rounded hover:bg-blue-50 dark:hover:bg-blue-900/20"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:296:13
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m          <button
            [35monClick[36m={handlePinEndTime}
            class="p-1 text-green-600 hover:text-green-700 dark:text-green-400 dark:hover:text-green-300 rounded hover:bg-green-50 dark:hover:bg-green-900/20"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:331:19
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                <button
                  [35monClick[36m={() => showFullMessage = true}
                  class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:342:21
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                  <button
                    [35monClick[36m={() => showFullMessage = false}
                    class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:355:19
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                <button
                  [35monClick[36m={() => showFullMessage = true}
                  class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:366:21
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                  <button
                    [35monClick[36m={() => showFullMessage = false}
                    class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:377:11
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m        <button
          [35monClick[36m={() => copyToClipboard(structuredFields?.message || parsedLog.rawMessage)}
          class="ml-2 p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:398:17
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m              <button
                [35monClick[36m={() => showFullMessage = true}
                class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:409:19
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                <button
                  [35monClick[36m={() => showFullMessage = false}
                  class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:419:11
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m        <button
          [35monClick[36m={() => copyToClipboard(`[${new Date(log.timestamp).toLocaleTimeString()}] [${log.level}] ${parsedLog.rawMessage}`)}
          class="ml-2 p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:438:17
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m              <button
                [35monClick[36m={() => showFullMessage = true}
                class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:447:19
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                <button
                  [35monClick[36m={() => showFullMessage = false}
                  class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:460:17
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m              <button
                [35monClick[36m={() => showFullMessage = true}
                class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:469:19
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                <button
                  [35monClick[36m={() => showFullMessage = false}
                  class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:481:11
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m        <button
          [35monClick[36m={() => copyToClipboard(structuredFields?.message || parsedLog.rawMessage)}
          class="p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:493:13
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m          <button
            [35monClick[36m={() => handleTraceIdClick(extractTraceId(structuredFields.traceId))}
            class="flex-shrink-0 inline-flex items-center space-x-1 text-xs text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 font-mono cursor-pointer hover:scale-105 transition-all duration-200"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:512:13
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m          <button
            [35monClick[36m={() => showFullMessage = true}
            class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:523:15
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m            <button
              [35monClick[36m={() => showFullMessage = false}
              class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:545:23
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                    <button
                      [35monClick[36m={() => showFullMessage = true}
                      class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:556:25
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                      <button
                        [35monClick[36m={() => showFullMessage = false}
                        class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:566:17
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m              <button
                [35monClick[36m={() => copyToClipboard(structuredFields.message)}
                class="ml-2 p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:588:19
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                <button
                  [35monClick[36m={() => handleDeploymentClick(extractDeploymentName()!)}
                  class="ml-1 inline-flex items-center space-x-1 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 font-medium cursor-pointer hover:scale-105 transition-all duration-200"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:598:19
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                <button
                  [35monClick[36m={() => copyToClipboard(extractDeploymentName()!)}
                  class="ml-1 p-0.5 text-slate-400 hover:text-slate-600 dark:text-slate-500 dark:hover:text-slate-300"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:728:19
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                <button
                  [35monClick[36m={() => showFullStackTrace = true}
                  class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:739:21
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                  <button
                    [35monClick[36m={() => showFullStackTrace = false}
                    class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:757:15
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m            <button
              [35monClick[36m={(e) => {
                e.stopPropagation();[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:757:25
[31mError[39m: Parameter 'e' implicitly has an 'any' type. (ts)
[36m            <button
              onClick={([35me[36m) => {
                e.stopPropagation();[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:780:29
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                          <button
                            [35monClick[36m={() => showFullAdditionalFields[key] = true}
                            class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:792:31
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                            <button
                              [35monClick[36m={() => showFullAdditionalFields[key] = false}
                              class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogEntry.svelte[39m:803:21
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                  <button
                    [35monClick[36m={() => copyToClipboard(`${key}: ${formatValue(value)}`)}
                    class="ml-2 p-1 text-slate-400 hover:text-slate-600 dark:text-slate-500 dark:hover:text-slate-300 flex-shrink-0"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/DeploymentSelector.svelte[39m:89:3
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m<div class="space-y-2">
  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300">
    Deployments ({selectedDeployments.length} selected)
  </label>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/PodSelector.svelte[39m:87:3
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m<div class="space-y-2">
  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300">
    Pods ({selectedPods.length} selected)
  </label>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/SeveritySelector.svelte[39m:66:3
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m<div class="space-y-2">
  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300">
    Severity Level
  </label>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/SeveritySelector.svelte[39m:73:7
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m      type="button"
      [35monClick[36m={toggleDropdown}
      {disabled}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/SeveritySelector.svelte[39m:94:15
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m              type="button"
              [35monClick[36m={() => handleSeveritySelect(option.value)}
              class="w-full flex items-center px-3 py-2 text-left hover:bg-slate-50 dark:hover:bg-slate-700 cursor-pointer {severityFilter === option.value ? 'bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400' : 'text-slate-900 dark:text-white'}"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/TimeFilter.svelte[39m:205:7
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m      title="Pin start time from selected log"
      [35mclass[36m="text-xs flex-1"
    >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/TimeFilter.svelte[39m:219:7
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m      title="Pin end time from selected log"
      [35mclass[36m="text-xs flex-1"
    >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/LogsSearchPanel.svelte[39m:145:15
[31mError[39m: Type '(event?: CustomEvent<{ severity: string; }> | undefined) => void' is not assignable to type '(data: { severity: string; }) => void'.
  Types of parameters 'event' and 'data' are incompatible.
    Type '{ severity: string; }' is missing the following properties from type 'CustomEvent<{ severity: string; }>': detail, initCustomEvent, bubbles, cancelBubble, and 20 more. (ts)
[36m              disabled={!isConnected}
              [35monSeverityChange[36m={handleSeverityChange}
            />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/AdvancedFilter.svelte[39m:202:9
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m        on:click={() => showAdvancedFilter = !showAdvancedFilter}
        [35mclass[36m="flex items-center space-x-2"
      >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/AdvancedFilter.svelte[39m:216:62
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m      {#if filterGroups.length > 0}
        <Button variant="outline" on:click={clearAllFilters} [35mclass[36m="text-red-600 hover:text-red-700">
          Clear All[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/AdvancedFilter.svelte[39m:223:39
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m    {#if showAdvancedFilter && filterGroups.length > 0}
      <Button on:click={applyFilters} [35mclass[36m="bg-blue-600 hover:bg-blue-700 text-white">
        Apply Filters[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/AdvancedFilter.svelte[39m:259:19
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                <button
                  [35monClick[36m={() => addCondition(group.id)}
                  class="text-xs text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/AdvancedFilter.svelte[39m:266:21
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                  <button
                    [35monClick[36m={() => removeFilterGroup(group.id)}
                    class="text-xs text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/AdvancedFilter.svelte[39m:343:23
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                    <button
                      [35monClick[36m={() => removeCondition(group.id, condition.id)}
                      class="text-xs text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/AdvancedFilter.svelte[39m:357:11
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m        <button
          [35monClick[36m={addFilterGroup}
          class="w-full p-2 border-2 border-dashed border-slate-300 dark:border-slate-600 rounded-lg text-slate-500 dark:text-slate-400 hover:border-slate-400 dark:hover:border-slate-500 hover:text-slate-700 dark:hover:text-slate-300 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ServiceSelector.svelte[39m:75:3
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m<div class="space-y-2">
  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300">
    Services ({selectedServices.length} selected)
  </label>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ServiceSelector.svelte[39m:82:7
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m    <button
      [35monClick[36m={toggleDropdown}
      disabled={disabled}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ServiceSelector.svelte[39m:115:13
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m          <button
            [35monClick[36m={selectAllServices}
            disabled={disabled || filteredServices.length === 0}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ServiceSelector.svelte[39m:122:13
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m          <button
            [35monClick[36m={clearAllServices}
            disabled={disabled || selectedServices.length === 0}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ServiceSelector.svelte[39m:169:13
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m          <button
            [35monClick[36m={() => handleServiceToggle(serviceName)}
            disabled={disabled}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/NamespaceSelector.svelte[39m:136:5
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m    type="button"
    [35mon:click={toggleDropdown}[36m
    disabled={disabled}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/NamespaceSelector.svelte[39m:157:11
[33mWarn[39m: Using `on:input` to listen to the input event is deprecated. Use the event attribute `oninput` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          value={searchQuery}
          [35mon:input={handleSearchInput}[36m
          class="w-full px-2 py-1 text-sm border border-slate-300 dark:border-slate-600 rounded bg-white dark:bg-slate-800 text-slate-900 dark:text-white placeholder-slate-500 dark:placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/NamespaceSelector.svelte[39m:172:15
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m              type="button"
              [35mon:click={() => handleNamespaceChange(namespace.name)}[36m
              class="w-full px-3 py-2 text-sm text-left hover:bg-slate-100 dark:hover:bg-slate-700 focus:bg-slate-100 dark:focus:bg-slate-700 focus:outline-none {currentSelectedNamespace === namespace.name ? 'bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300' : 'text-slate-900 dark:text-white'}"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/NamespaceSelector.svelte[39m:72:31
[31mError[39m: Property 'filter' does not exist on type '() => any'. (ts)
[36m    if (!searchQuery) return filteredNamespaces;
    return filteredNamespaces.[35mfilter[36m((ns: K8sNamespace) => 
      ns.name.toLowerCase().includes(searchQuery.toLowerCase())[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/NamespaceSelector.svelte[39m:78:62
[31mError[39m: Argument of type 'string' is not assignable to parameter of type 'LogContext'. (ts)
[36m  function handleNamespaceChange(namespace: string) {
    logger.info('NamespaceSelector: Changing namespace to:', [35mnamespace[36m);
    appStore.setSelectedNamespace(namespace);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/NamespaceSelector.svelte[39m:169:18
[31mError[39m: Argument of type '() => any' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m        {:else}
          {#each [35mdisplayNamespaces[36m as namespace}
            <button[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/NamespaceSelector.svelte[39m:172:53
[31mError[39m: 'namespace' is of type 'unknown'. (ts)
[36m              type="button"
              on:click={() => handleNamespaceChange([35mnamespace[36m.name)}
              class="w-full px-3 py-2 text-sm text-left hover:bg-slate-100 dark:hover:bg-slate-700 focus:bg-slate-100 dark:focus:bg-slate-700 focus:outline-none {currentSelectedNamespace === namespace.name ? 'bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300' : 'text-slate-900 dark:text-white'}"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/NamespaceSelector.svelte[39m:173:192
[31mError[39m: 'namespace' is of type 'unknown'. (ts)
[36m              on:click={() => handleNamespaceChange(namespace.name)}
              class="w-full px-3 py-2 text-sm text-left hover:bg-slate-100 dark:hover:bg-slate-700 focus:bg-slate-100 dark:focus:bg-slate-700 focus:outline-none {currentSelectedNamespace === [35mnamespace[36m.name ? 'bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300' : 'text-slate-900 dark:text-white'}"
            >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/NamespaceSelector.svelte[39m:176:41
[31mError[39m: 'namespace' is of type 'unknown'. (ts)
[36m              <div class="flex items-center justify-between">
                <span class="truncate">{[35mnamespace[36m.name}</span>
                {#if starredNamespaces.includes(namespace.name)}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/NamespaceSelector.svelte[39m:177:49
[31mError[39m: 'namespace' is of type 'unknown'. (ts)
[36m                <span class="truncate">{namespace.name}</span>
                {#if starredNamespaces.includes([35mnamespace[36m.name)}
                  <span class="text-yellow-500 ml-2">⭐</span>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ProjectDeploymentSelector.svelte[39m:91:3
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m<div class="space-y-2">
  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300">
    Linked Deployment (Optional)
  </label>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ProjectDeploymentSelector.svelte[39m:98:7
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m      type="button"
      [35monClick[36m={toggleDropdown}
      {disabled}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ProjectDeploymentSelector.svelte[39m:133:15
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m              type="button"
              [35monClick[36m={clearDeployment}
              class="text-xs px-2 py-1 bg-slate-600 text-white rounded hover:bg-slate-700 focus:outline-none focus:ring-1 focus:ring-slate-500"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ProjectDeploymentSelector.svelte[39m:160:17
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                type="button"
                [35monClick[36m={() => handleDeploymentSelect(deployment.name)}
                class="w-full text-left px-3 py-2 hover:bg-slate-50 dark:hover:bg-slate-700 cursor-pointer {selectedDeployment === deployment.name ? 'bg-blue-50 dark:bg-blue-900/20' : ''}"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/FrameworkSelector.svelte[39m:128:3
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m<div class="space-y-2">
  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300">
    Framework
  </label>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/FrameworkSelector.svelte[39m:135:7
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m      type="button"
      [35monClick[36m={toggleDropdown}
      {disabled}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/FrameworkSelector.svelte[39m:170:15
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m              type="button"
              [35monClick[36m={clearFramework}
              class="text-xs px-2 py-1 bg-slate-600 text-white rounded hover:bg-slate-700 focus:outline-none focus:ring-1 focus:ring-slate-500"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/FrameworkSelector.svelte[39m:188:17
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                type="button"
                [35monClick[36m={() => handleFrameworkSelect(framework)}
                class="w-full text-left px-3 py-2 hover:bg-slate-50 dark:hover:bg-slate-700 cursor-pointer {selectedFramework === framework ? 'bg-blue-50 dark:bg-blue-900/20' : ''}"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ConfigTreeEditor.svelte[39m:113:13
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m          <div>
            [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
              Key
            </label>[36m
            <input[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ConfigTreeEditor.svelte[39m:124:13
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m          <div>
            [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
              Value
            </label>[36m
            <input[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ConfigTreeEditor.svelte[39m:163:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div class="key-section mb-2">
                  [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Key
                  </label>[36m
                  <input[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ConfigTreeEditor.svelte[39m:174:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div class="value-section">
                  [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Value
                  </label>[36m
                  {#if readOnly}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ConfigTreeEditor.svelte[39m:188:42
[33mWarn[39m: Self-closing HTML tags for non-void elements are ambiguous — use `<textarea ...></textarea>` rather than `<textarea ... />`
https://svelte.dev/e/element_invalid_self_closing_tag (svelte)
[36m                  {:else}
                                         [35m<textarea
                       value={value}
                       oninput={(e) => updateValue(key, (e.target as HTMLTextAreaElement).value)}
                       rows={isJson(value) ? 6 : 2}
                       class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white font-mono text-sm resize-y"
                       placeholder="Enter value"
                     />[36m
                  {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ConfigTreeEditor.svelte[39m:204:21
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m                    on:click={() => removeKey(key)}
                    [35mclass[36m="text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300"
                  >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ConfigDataViewer.svelte[39m:47:11
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m          class="px-3 py-2 text-sm font-medium rounded-l-md border border-gray-300 dark:border-gray-600 {viewMode === 'tree' ? 'bg-blue-600 text-white border-blue-600' : 'bg-slate-50 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600'}"
          [35monClick[36m={() => viewMode = 'tree'}
        >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ConfigDataViewer.svelte[39m:53:11
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m          class="px-3 py-2 text-sm font-medium border-t border-b border-gray-300 dark:border-gray-600 {viewMode === 'json' ? 'bg-blue-600 text-white border-blue-600' : 'bg-slate-50 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600'}"
          [35monClick[36m={() => viewMode = 'json'}
        >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/workloads/ConfigDataViewer.svelte[39m:59:11
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m          class="px-3 py-2 text-sm font-medium rounded-r-md border border-gray-300 dark:border-gray-600 {viewMode === 'yaml' ? 'bg-blue-600 text-white border-blue-600' : 'bg-slate-50 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600'}"
          [35monClick[36m={() => viewMode = 'yaml'}
        >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/toast/Toast.svelte[39m:73:7
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m      </div>
      [35m<button 
        onClick={close}
        class="ml-4 text-white hover:text-gray-200 focus:outline-none"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/toast/Toast.svelte[39m:74:9
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m      <button 
        [35monClick[36m={close}
        class="ml-4 text-white hover:text-gray-200 focus:outline-none"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/toast/ToastContainer.svelte[39m:5:7
[33mWarn[39m: `notifications` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  
  let [35mnotifications: ToastNotification[][36m = [];[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:102:7
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m      </div>
      [35m<button
        onClick={() => copyToClipboard(structuredFields?.message || parsedLog.rawMessage)}
        class="ml-2 p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"
        title="Copy message"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
        </svg>
      </button>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:144:7
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m      </div>
      [35m<button
        onClick={() => copyToClipboard(`[${new Date(log.timestamp).toLocaleTimeString()}] [${log.level}] ${parsedLog.rawMessage}`)}
        class="ml-2 p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"
        title="Copy raw log"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
        </svg>
      </button>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:206:7
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m      <!-- Copy button for compact view -->
      [35m<button
        onclick={() => copyToClipboard(structuredFields?.message || parsedLog.rawMessage)}
        class="p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"
        title="Copy message"
      >
        <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
        </svg>
      </button>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:25:7
[31mError[39m: Cannot find name 'logger'. (ts)
[36m    } catch (err) {
      [35mlogger[36m.error('Failed to copy text: ', err);
      toastStore.error('Failed to copy content to clipboard');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:1:10
[31mError[39m: Cannot find name 'logger'. (ts)
[36mimport { [35mlogger[36m } from '$lib/utils/logger';
<script lang="ts">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:57:17
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m              <button
                [35monClick[36m={() => showFullMessage = true}
                class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:68:19
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                <button
                  [35monClick[36m={() => showFullMessage = false}
                  class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:81:17
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m              <button
                [35monClick[36m={() => showFullMessage = true}
                class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:92:19
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                <button
                  [35monClick[36m={() => showFullMessage = false}
                  class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:103:9
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m      <button
        [35monClick[36m={() => copyToClipboard(structuredFields?.message || parsedLog.rawMessage)}
        class="ml-2 p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:124:15
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m            <button
              [35monClick[36m={() => showFullMessage = true}
              class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:135:17
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m              <button
                [35monClick[36m={() => showFullMessage = false}
                class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:145:9
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m      <button
        [35monClick[36m={() => copyToClipboard(`[${new Date(log.timestamp).toLocaleTimeString()}] [${log.level}] ${parsedLog.rawMessage}`)}
        class="ml-2 p-1 text-slate-500 hover:text-slate-700 dark:text-slate-400 dark:hover:text-slate-200 flex-shrink-0"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:186:15
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m            <button
              [35monClick[36m={() => showFullMessage = true}
              class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:195:17
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m              <button
                [35monClick[36m={() => showFullMessage = false}
                class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:219:11
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m        <button
          [35monClick[36m={() => handleTraceIdClick(extractTraceId(structuredFields.traceId))}
          class="flex-shrink-0 inline-flex items-center space-x-1 text-xs text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 font-mono cursor-pointer hover:scale-105 transition-all duration-200"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:238:11
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m        <button
          [35monClick[36m={() => showFullMessage = true}
          class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryContent.svelte[39m:249:13
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m          <button
            [35monClick[36m={() => showFullMessage = false}
            class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryStructured.svelte[39m:292:9
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m        <span>Additional Fields ({Object.keys(structuredFields.other).length})</span>
        [35m<button
          onClick={(e) => {
            e.stopPropagation();
            copyToClipboard(JSON.stringify(structuredFields.other, null, 2));
          }}
          class="p-1 text-slate-400 hover:text-slate-600 dark:text-slate-500 dark:hover:text-slate-300 flex-shrink-0"
          title="Copy all additional fields as JSON"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
          </svg>
        </button>[36m
      </summary>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryStructured.svelte[39m:338:15
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m              </div>
              [35m<button
                onClick={() => copyToClipboard(`${key}: ${formatValue(value)}`)}
                class="ml-2 p-1 text-slate-400 hover:text-slate-600 dark:text-slate-500 dark:hover:text-slate-300 flex-shrink-0"
                title="Copy {key}: {formatValue(value)}"
              >
                <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                </svg>
              </button>[36m
            </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryStructured.svelte[39m:77:19
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m                  on:click={() => showFullMessage = true}
                  [35mclass[36m="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"
                >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryStructured.svelte[39m:88:21
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m                    on:click={() => showFullMessage = false}
                    [35mclass[36m="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"
                  >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryStructured.svelte[39m:163:15
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m            <button
              [35monClick[36m={() => handleTraceIdClick(extractTraceId(structuredFields.traceId))}
              class="ml-1 inline-flex items-center space-x-1 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 font-mono cursor-pointer hover:scale-105 transition-all duration-200"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryStructured.svelte[39m:232:15
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m            <button
              [35monClick[36m={() => showFullError = true}
              class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryStructured.svelte[39m:243:17
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m              <button
                [35monClick[36m={() => showFullError = false}
                class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryStructured.svelte[39m:264:15
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m            <button
              [35monClick[36m={() => showFullStackTrace = true}
              class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryStructured.svelte[39m:275:17
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m              <button
                [35monClick[36m={() => showFullStackTrace = false}
                class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryStructured.svelte[39m:293:11
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m        <button
          [35monClick[36m={(e) => {
            e.stopPropagation();[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryStructured.svelte[39m:293:21
[31mError[39m: Parameter 'e' implicitly has an 'any' type. (ts)
[36m        <button
          onClick={([35me[36m) => {
            e.stopPropagation();[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryStructured.svelte[39m:316:25
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                      <button
                        [35monClick[36m={() => showFullAdditionalFields[key] = true}
                        class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryStructured.svelte[39m:328:27
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                        <button
                          [35monClick[36m={() => showFullAdditionalFields[key] = false}
                          class="ml-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-xs underline"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryStructured.svelte[39m:339:17
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m              <button
                [35monClick[36m={() => copyToClipboard(`${key}: ${formatValue(value)}`)}
                class="ml-2 p-1 text-slate-400 hover:text-slate-600 dark:text-slate-500 dark:hover:text-slate-300 flex-shrink-0"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogsFiltersPanel.svelte[39m:48:31
[31mError[39m: Parameter 'ns' implicitly has an 'any' type. (ts)
[36m      placeholder="Select namespace..."
      options={namespaces.map([35mns[36m => ({ value: ns.name, label: ns.name }))}
      selectedValues={selectedNamespace ? [selectedNamespace] : []}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogsFiltersPanel.svelte[39m:49:7
[31mError[39m: Object literal may only specify known properties, and '"selectedValues"' does not exist in type '$$ComponentProps'. (ts)
[36m      options={namespaces.map(ns => ({ value: ns.name, label: ns.name }))}
      [35mselectedValues[36m={selectedNamespace ? [selectedNamespace] : []}
      onchange={handleNamespaceChange}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogsFiltersPanel.svelte[39m:56:32
[31mError[39m: Parameter 'dep' implicitly has an 'any' type. (ts)
[36m      placeholder="Select deployments..."
      options={deployments.map([35mdep[36m => ({ value: dep.name, label: dep.name }))}
      selectedValues={selectedDeployments}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogsFiltersPanel.svelte[39m:57:7
[31mError[39m: Object literal may only specify known properties, and '"selectedValues"' does not exist in type '$$ComponentProps'. (ts)
[36m      options={deployments.map(dep => ({ value: dep.name, label: dep.name }))}
      [35mselectedValues[36m={selectedDeployments}
      multiple={true}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogsFiltersPanel.svelte[39m:65:25
[31mError[39m: Parameter 'pod' implicitly has an 'any' type. (ts)
[36m      placeholder="Select pods..."
      options={pods.map([35mpod[36m => ({ value: pod.name, label: pod.name }))}
      selectedValues={selectedPods}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogsFiltersPanel.svelte[39m:66:7
[31mError[39m: Object literal may only specify known properties, and '"selectedValues"' does not exist in type '$$ComponentProps'. (ts)
[36m      options={pods.map(pod => ({ value: pod.name, label: pod.name }))}
      [35mselectedValues[36m={selectedPods}
      multiple={true}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogsFiltersPanel.svelte[39m:75:7
[31mError[39m: Object literal may only specify known properties, and '"selectedValues"' does not exist in type '$$ComponentProps'. (ts)
[36m      options={severityOptions}
      [35mselectedValues[36m={selectedSeverity ? [selectedSeverity] : []}
      onchange={handleSeverityChange}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryCompact.svelte[39m:70:5
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m  {#if showPod && log.pod}
    [35m<span 
      class="text-slate-600 dark:text-slate-300 cursor-pointer hover:underline"
      on:click={() => handlePodClick(log.pod)}
    >
      {log.pod}
    </span>[36m
  {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryCompact.svelte[39m:70:5
[33mWarn[39m: `<span>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m  {#if showPod && log.pod}
    [35m<span 
      class="text-slate-600 dark:text-slate-300 cursor-pointer hover:underline"
      on:click={() => handlePodClick(log.pod)}
    >
      {log.pod}
    </span>[36m
  {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogEntryCompact.svelte[39m:72:7
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m      class="text-slate-600 dark:text-slate-300 cursor-pointer hover:underline"
      [35mon:click={() => handlePodClick(log.pod)}[36m
    >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/settings/NamespaceSettings.svelte[39m:112:9
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type '$$ComponentProps'. (ts)
[36m        action="refresh"
        [35monClick[36m={() => handleRefresh()}
        loading={isLoading}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/settings/NamespaceSettings.svelte[39m:118:9
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type '$$ComponentProps'. (ts)
[36m        label="Clear All"
        [35monClick[36m={() => clearAllSettings()}
      />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/settings/NamespaceSettings.svelte[39m:144:15
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m              type="button"
              [35monClick[36m={() => toggleStar(namespace.name)}
              class="text-slate-400 hover:text-yellow-500 {$namespaceState.starred.includes(namespace.name) ? 'text-yellow-500' : ''}"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/settings/NamespaceSettings.svelte[39m:164:17
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                type="button"
                [35monClick[36m={() => moveNamespaceUp(index)}
                disabled={index === 0}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/settings/NamespaceSettings.svelte[39m:173:17
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m                type="button"
                [35monClick[36m={() => moveNamespaceDown(index)}
                disabled={index === filteredNamespaces.length - 1}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/settings/IdeSettings.svelte[39m:344:15
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m            <div class="flex flex-col items-center">
              [35m<div 
                class="flex flex-col items-center p-3 bg-slate-50 dark:bg-slate-700 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-600 transition-colors cursor-pointer w-full"
                onclick={() => openIde(executable)}
                title="Open {executable}"
              >
                <div class="text-2xl mb-2">{getIdeIcon(executable)}</div>
                <div class="flex items-center space-x-2 mb-2">
                  <span class="text-green-500 text-sm">✓</span>
                  <span class="font-mono text-sm text-slate-900 dark:text-white text-center">
                    {executable}
                  </span>
                </div>
              </div>[36m
              {#if !isConfigured}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/settings/IdeSettings.svelte[39m:344:15
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m            <div class="flex flex-col items-center">
              [35m<div 
                class="flex flex-col items-center p-3 bg-slate-50 dark:bg-slate-700 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-600 transition-colors cursor-pointer w-full"
                onclick={() => openIde(executable)}
                title="Open {executable}"
              >
                <div class="text-2xl mb-2">{getIdeIcon(executable)}</div>
                <div class="flex items-center space-x-2 mb-2">
                  <span class="text-green-500 text-sm">✓</span>
                  <span class="font-mono text-sm text-slate-900 dark:text-white text-center">
                    {executable}
                  </span>
                </div>
              </div>[36m
              {#if !isConfigured}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/settings/IdeSettings.svelte[39m:358:17
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m              {#if !isConfigured}
                [35m<button 
                  class="mt-2 p-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded-lg transition-colors"
                  onclick={() => {
                    newIdeName = executable.charAt(0).toUpperCase() + executable.slice(1);
                    newIdeExecutable = executable;
                    showAddIdeModal = true;
                    editingIde = null;
                  }}
                  title="Add IDE"
                >
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                  </svg>
                </button>[36m
              {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/settings/IdeSettings.svelte[39m:445:19
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                {#if installedIdes.length === 0 || isIdeInstalled(ide.executable)}
                  [35m<button
                    class="p-2 text-green-600 hover:text-green-700 dark:text-green-400 dark:hover:text-green-300 hover:bg-green-50 dark:hover:bg-green-900/20 rounded-lg transition-colors"
                    onclick={() => openIde(ide.executable)}
                    title="Open IDE"
                  >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                    </svg>
                  </button>[36m
                {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/settings/IdeSettings.svelte[39m:456:19
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                {#if !ide.is_default}
                  [35m<button
                    class="p-2 text-yellow-600 hover:text-yellow-700 dark:text-yellow-400 dark:hover:text-yellow-300 hover:bg-yellow-50 dark:hover:bg-yellow-900/20 rounded-lg transition-colors"
                    onclick={() => setDefaultIde(ide.id!)}
                    title="Set as Default"
                  >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
                    </svg>
                  </button>[36m
                {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/settings/IdeSettings.svelte[39m:466:17
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                {/if}
                [35m<button
                  class="p-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded-lg transition-colors"
                  onclick={() => openEditIdeModal(ide)}
                  title="Edit IDE"
                >
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                  </svg>
                </button>[36m
                <button[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/settings/IdeSettings.svelte[39m:475:17
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                </button>
                [35m<button
                  class="p-2 text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-lg transition-colors"
                  onclick={() => deleteIde(ide.id!)}
                  title="Delete IDE"
                >
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                  </svg>
                </button>[36m
              </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/settings/FrameworkIdeSettings.svelte[39m:268:17
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m              <div class="flex items-center space-x-1">
                [35m<button
                  class="p-2 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded-lg transition-colors"
                  onclick={() => openEditFrameworkMappingModal(mapping)}
                  title="Edit Mapping"
                >
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                  </svg>
                </button>[36m
                <button[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/settings/FrameworkIdeSettings.svelte[39m:277:17
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                </button>
                [35m<button
                  class="p-2 text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-lg transition-colors"
                  onclick={() => deleteFrameworkMapping(mapping.framework)}
                  title="Delete Mapping"
                >
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                  </svg>
                </button>[36m
              </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/settings/AutomationSettings.svelte[39m:174:21
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                  <div class="flex items-center gap-1">
                    [35m<button
                      class="p-1 text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded transition-colors"
                      onclick={() => openEditPipeline(pipeline)}
                      title="Edit Pipeline"
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                      </svg>
                    </button>[36m
                    <button[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/settings/AutomationSettings.svelte[39m:183:21
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                    </button>
                    [35m<button
                      class="p-1 text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300 hover:bg-red-50 dark:hover:bg-red-900/20 rounded transition-colors"
                      onclick={() => deletePipeline(pipeline.id)}
                      title="Delete Pipeline"
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                      </svg>
                    </button>[36m
                  </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectDetailHeader.svelte[39m:35:9
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m      <button
        [35monClick[36m={handleBack}
        class="p-2 text-slate-400 hover:text-slate-600 dark:hover:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-700 rounded-lg transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectDetailHeader.svelte[39m:54:9
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type 'HTMLProps<"button", HTMLAttributes<any>>'. (ts)
[36m        class="p-2 {project?.starred ? 'text-yellow-500' : 'text-slate-400'} hover:text-yellow-500 dark:hover:text-yellow-400 hover:bg-yellow-50 dark:hover:bg-yellow-900/20 rounded-lg transition-colors"
        [35monClick[36m={handleStar}
        title={project?.starred ? 'Unstar project' : 'Star project'}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectDetailHeader.svelte[39m:63:57
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m      </Button>
      <Button variant="outline" on:click={handleDelete} [35mclass[36m="text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300">
        <Icon icon="mdi:delete" class="w-4 h-4 mr-2" />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectInformationCard.svelte[39m:17:7
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m    <div>
      [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
        Project Name
      </label>[36m
      <p class="text-slate-900 dark:text-white">{project?.name}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectInformationCard.svelte[39m:23:7
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m    <div>
      [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
        Directory Path
      </label>[36m
      <p class="text-slate-900 dark:text-white font-mono text-sm break-all">{project?.path}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectInformationCard.svelte[39m:29:7
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m    <div>
      [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
        Framework
      </label>[36m
      <p class="text-slate-900 dark:text-white">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectInformationCard.svelte[39m:37:7
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m    <div>
      [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
        Kubernetes Deployment
      </label>[36m
      <p class="text-slate-900 dark:text-white">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectInformationCard.svelte[39m:45:7
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m    <div>
      [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
        Status
      </label>[36m
      <p class="text-slate-900 dark:text-white">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectTimestampsCard.svelte[39m:27:7
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m    <div>
      [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
        Created
      </label>[36m
      <p class="text-slate-900 dark:text-white">{formatDate(project?.created_at)}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectTimestampsCard.svelte[39m:33:7
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m    <div>
      [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
        Last Updated
      </label>[36m
      <p class="text-slate-900 dark:text-white">{formatDate(project?.updated_at)}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectTimestampsCard.svelte[39m:39:7
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m    <div>
      [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
        Starred
      </label>[36m
      <p class="text-slate-900 dark:text-white">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectQuickActionsCard.svelte[39m:36:63
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
    <Button variant="outline" on:click={handleOpenInExplorer} [35mclass[36m="h-auto p-4 flex flex-col items-center">
      <Icon icon="mdi:folder-open" class="w-6 h-6 mb-2" />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectQuickActionsCard.svelte[39m:41:60
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m    {#if project?.framework}
      <Button variant="outline" on:click={handleOpenInIde} [35mclass[36m="h-auto p-4 flex flex-col items-center">
        <Icon icon="mdi:code-braces" class="w-6 h-6 mb-2" />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectQuickActionsCard.svelte[39m:47:65
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m    {#if project?.deployment}
      <Button variant="outline" on:click={handleViewDeployment} [35mclass[36m="h-auto p-4 flex flex-col items-center">
        <Icon icon="devicon:kubernetes" class="w-6 h-6 mb-2" />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectQuickActionsCard.svelte[39m:52:57
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m    {/if}
    <Button variant="outline" on:click={handleViewLogs} [35mclass[36m="h-auto p-4 flex flex-col items-center">
      <Icon icon="mdi:file-document" class="w-6 h-6 mb-2" />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectFilters.svelte[39m:17:5
[31mError[39m: Cannot assign to constant
https://svelte.dev/e/constant_assignment (svelte)
[36m  function handleSearchChange(event: CustomEvent) {
    [35msearchQuery = event.detail.value[36m;
    dispatch('searchChange', { value: searchQuery });[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectFilters.svelte[39m:17:5
[31mError[39m: Cannot assign to 'searchQuery' because it is a constant. (ts)
[36m  function handleSearchChange(event: CustomEvent) {
    [35msearchQuery[36m = event.detail.value;
    dispatch('searchChange', { value: searchQuery });[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectFilters.svelte[39m:22:5
[31mError[39m: Cannot assign to 'frameworkFilter' because it is a constant. (ts)
[36m  function handleFrameworkFilterChange(event: CustomEvent) {
    [35mframeworkFilter[36m = event.detail.value;
    dispatch('frameworkFilterChange', { value: frameworkFilter });[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectFilters.svelte[39m:27:5
[31mError[39m: Cannot assign to 'sortBy' because it is a constant. (ts)
[36m  function handleSortByChange(event: CustomEvent) {
    [35msortBy[36m = event.detail.value;
    dispatch('sortByChange', { value: sortBy });[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectFilters.svelte[39m:38:7
[31mError[39m: Object literal may only specify known properties, and '"onchange"' does not exist in type '$$ComponentProps'. (ts)
[36m      placeholder="Search by name or path..."
      [35monchange[36m={handleSearchChange}
    />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectFilters.svelte[39m:49:9
[31mError[39m: Object literal may only specify known properties, and '"selectedValues"' does not exist in type '$$ComponentProps'. (ts)
[36m      <BaseSelector
        [35mselectedValues[36m={frameworkFilter ? [frameworkFilter] : []}
        onchange={handleFrameworkFilterChange}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectFilters.svelte[39m:53:29
[31mError[39m: Parameter 'framework' implicitly has an 'any' type. (ts)
[36m          { value: "", label: 'All Frameworks' },
          ...frameworks.map([35mframework[36m => ({ value: framework, label: framework }))
        ]}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectFilters.svelte[39m:63:9
[31mError[39m: Object literal may only specify known properties, and '"selectedValues"' does not exist in type '$$ComponentProps'. (ts)
[36m      <BaseSelector
        [35mselectedValues[36m={[sortBy]}
        onchange={handleSortByChange}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/projects/ProjectModal.svelte[39m:147:11
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          type="button"
          [35mon:click={handleSelectDirectory}[36m
          class="px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-md bg-white dark:bg-slate-800 text-slate-700 dark:text-slate-300 hover:bg-slate-50 dark:hover:bg-slate-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/clusters/ClusterStatus.svelte[39m:94:9
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type '$$ComponentProps'. (ts)
[36m        disabled={isConnecting}
        [35monClick[36m={handleConnect}
      />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/clusters/ClusterStatus.svelte[39m:98:9
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type '$$ComponentProps'. (ts)
[36m        action="refresh"
        [35monClick[36m={handleRefresh}
      />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/clusters/ClusterMetrics.svelte[39m:91:9
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type '$$ComponentProps'. (ts)
[36m        label="View Metrics"
        [35monClick[36m={handleViewMetrics}
      />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/clusters/ClusterMetrics.svelte[39m:96:9
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type '$$ComponentProps'. (ts)
[36m        label="Configure"
        [35monClick[36m={handleConfigure}
      />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/clusters/ClusterManagement.svelte[39m:25:5
[31mError[39m: Cannot assign to constant
https://svelte.dev/e/constant_assignment (svelte)
[36m  function handleClusterTypeChange(event: CustomEvent) {
    [35mselectedClusterType = event.detail.values[0][36m;
    dispatch('clusterTypeChange', { clusterType: selectedClusterType });[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/clusters/ClusterManagement.svelte[39m:25:5
[31mError[39m: Cannot assign to 'selectedClusterType' because it is a constant. (ts)
[36m  function handleClusterTypeChange(event: CustomEvent) {
    [35mselectedClusterType[36m = event.detail.values[0];
    dispatch('clusterTypeChange', { clusterType: selectedClusterType });[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/clusters/ClusterManagement.svelte[39m:32:7
[31mError[39m: Cannot assign to 'kubeconfigFile' because it is a constant. (ts)
[36m    if (target.files && target.files[0]) {
      [35mkubeconfigFile[36m = target.files[0];
      dispatch('fileSelect', { file: kubeconfigFile });[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/clusters/ClusterManagement.svelte[39m:50:9
[31mError[39m: Object literal may only specify known properties, and '"selectedValues"' does not exist in type '$$ComponentProps'. (ts)
[36m      <BaseSelector
        [35mselectedValues[36m={[selectedClusterType]}
        onchange={handleClusterTypeChange}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/clusters/ClusterManagement.svelte[39m:76:7
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type '$$ComponentProps'. (ts)
[36m      disabled={isAddingCluster || !kubeconfigFile}
      [35monClick[36m={handleAddCluster}
    />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/frameworks/FrameworkCard.svelte[39m:47:13
[31mError[39m: Object literal may only specify known properties, and '"label"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m            variant={framework?.is_active ? 'success' : 'secondary'}
            [35mlabel[36m={framework?.is_active ? 'Active' : 'Inactive'}
          />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/frameworks/FrameworkCard.svelte[39m:94:11
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type '$$ComponentProps'. (ts)
[36m          size="sm"
          [35monClick[36m={handleToggleActive}
        />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/frameworks/FrameworkCard.svelte[39m:101:11
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type '$$ComponentProps'. (ts)
[36m          size="sm"
          [35monClick[36m={handleDelete}
        />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/frameworks/FrameworkFilters.svelte[39m:36:23
[31mError[39m: Parameter 'category' implicitly has an 'any' type. (ts)
[36m    { value: "", label: "All Categories" },
    ...categories.map([35mcategory[36m => ({ value: category, label: category }))
  ];[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/frameworks/FrameworkFilters.svelte[39m:47:11
[31mError[39m: Object literal may only specify known properties, and '"onchange"' does not exist in type '$$ComponentProps'. (ts)
[36m          value={searchQuery}
          [35monchange[36m={handleSearchChange}
        />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/frameworks/FrameworkFilters.svelte[39m:53:9
[31mError[39m: Object literal may only specify known properties, and '"selectedValues"' does not exist in type '$$ComponentProps'. (ts)
[36m        options={categoryOptions}
        [35mselectedValues[36m={selectedCategory ? [selectedCategory] : []}
        placeholder="Select category"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/frameworks/FrameworkFilters.svelte[39m:61:9
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type '$$ComponentProps'. (ts)
[36m        label="Search"
        [35monClick[36m={handleSearch}
      />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/frameworks/FrameworkFilters.svelte[39m:67:9
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type '$$ComponentProps'. (ts)
[36m        label="Refresh"
        [35monClick[36m={handleRefresh}
      />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/frameworks/FrameworkModal.svelte[39m:145:5
[31mError[39m: Object literal may only specify known properties, and '"onsubmit"' does not exist in type '$$ComponentProps'. (ts)
[36m    showCancel={false}
    [35monsubmit[36m={handleFormSubmit}
  />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/overview/OverviewConnectionStatus.svelte[39m:46:11
[31mError[39m: Object literal may only specify known properties, and '"onClick"' does not exist in type '$$ComponentProps'. (ts)
[36m          loading={isLoading}
          [35monClick[36m={handleRefresh}
        />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/index.ts[39m:23:1
[31mError[39m: Module './ui/index.js' has already exported a member named 'Toast'. Consider explicitly re-exporting to resolve the ambiguity. 
[36m// Toast Components
[35mexport * from './toast/index.js';[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/index.ts[39m:23:1
[31mError[39m: Module './ui/index.js' has already exported a member named 'ToastContainer'. Consider explicitly re-exporting to resolve the ambiguity. 
[36m// Toast Components
[35mexport * from './toast/index.js';[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/index.ts[39m:26:1
[31mError[39m: Module './workloads/index.js' has already exported a member named 'LogsSearchPanel'. Consider explicitly re-exporting to resolve the ambiguity. 
[36m// Logs Components
[35mexport * from './logs/index.js';[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/backup/form-backup/button.svelte[39m:43:3
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m>
  [35m<slot />[36m
</button>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/backup/form-backup/textarea.svelte[39m:19:1
[33mWarn[39m: Self-closing HTML tags for non-void elements are ambiguous — use `<textarea ...></textarea>` rather than `<textarea ... />`
https://svelte.dev/e/element_invalid_self_closing_tag (svelte)
[36m
[35m<textarea
  class={cn(
    "flex min-h-[80px] w-full rounded-md border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-800 px-3 py-2 text-sm ring-offset-white dark:ring-offset-slate-950 placeholder:text-slate-500 dark:placeholder:text-slate-400 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-500 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
    className
  )}
  placeholder={placeholder}
  rows={rows}
  disabled={disabled}
  {...rest}
/>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/badge/badge.svelte[39m:30:3
[31mError[39m: Property 'ref' does not exist on type 'HTMLAnchorAttributes & { element?: HTMLElement | undefined; } & { variant?: "default" | "destructive" | "outline" | "secondary" | undefined; }'. (ts)
[36m	let {
		[35mref[36m = $bindable(null),
		href,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/dialog/dialog-footer.svelte[39m:6:3
[31mError[39m: Property 'ref' does not exist on type 'HTMLAttributes<HTMLDivElement> & { element?: HTMLElement | undefined; }'. (ts)
[36m	let {
		[35mref[36m = $bindable(null),
		class: className,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/dialog/dialog-header.svelte[39m:6:3
[31mError[39m: Property 'ref' does not exist on type 'HTMLAttributes<HTMLDivElement> & { element?: HTMLElement | undefined; }'. (ts)
[36m	let {
		[35mref[36m = $bindable(null),
		class: className,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/command/command-shortcut.svelte[39m:6:3
[31mError[39m: Property 'ref' does not exist on type 'HTMLAttributes<HTMLSpanElement> & { element?: HTMLElement | undefined; }'. (ts)
[36m	let {
		[35mref[36m = $bindable(null),
		class: className,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/scroll-area/scroll-area-scrollbar.svelte[39m:9:3
[31mError[39m: Property 'children' does not exist on type 'WithoutChild<ScrollAreaScrollbarProps>'. (ts)
[36m		orientation = "vertical",
		[35mchildren[36m,
		...restProps[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/scroll-area/scroll-area.svelte[39m:12:3
[31mError[39m: Property 'children' does not exist on type '$$ComponentProps'. (ts)
[36m		scrollbarYClasses = "",
		[35mchildren[36m,
		...restProps[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/select/select-label.svelte[39m:6:3
[31mError[39m: Property 'ref' does not exist on type 'HTMLAttributes<HTMLDivElement> & { element?: HTMLElement | undefined; }'. (ts)
[36m	let {
		[35mref[36m = $bindable(null),
		class: className,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/select/select-item.svelte[39m:11:3
[31mError[39m: Property 'children' does not exist on type 'WithoutChild<SelectItemProps>'. (ts)
[36m		label,
		[35mchildren[36m: childrenProp,
		...restProps[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/select/select-content.svelte[39m:12:3
[31mError[39m: Property 'children' does not exist on type '$$ComponentProps'. (ts)
[36m		portalProps,
		[35mchildren[36m,
		...restProps[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/select/select-trigger.svelte[39m:9:3
[31mError[39m: Property 'children' does not exist on type '$$ComponentProps'. (ts)
[36m		class: className,
		[35mchildren[36m,
		size = "default",[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/sheet/sheet-header.svelte[39m:6:3
[31mError[39m: Property 'ref' does not exist on type 'HTMLAttributes<HTMLDivElement> & { element?: HTMLElement | undefined; }'. (ts)
[36m	let {
		[35mref[36m = $bindable(null),
		class: className,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/sheet/sheet-footer.svelte[39m:6:3
[31mError[39m: Property 'ref' does not exist on type 'HTMLAttributes<HTMLDivElement> & { element?: HTMLElement | undefined; }'. (ts)
[36m	let {
		[35mref[36m = $bindable(null),
		class: className,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ui/textarea/textarea.svelte[39m:6:3
[31mError[39m: Property 'ref' does not exist on type 'WithoutChildren<WithElementRef<HTMLTextareaAttributes>>'. (ts)
[36m	let {
		[35mref[36m = $bindable(null),
		value = $bindable(),[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/browser-k8s-service.ts[39m:76:39
[31mError[39m: Property 'showOpenFilePicker' does not exist on type 'Window & typeof globalThis'. 
[36m      // Request permission to access files
      const fileHandle = await window.[35mshowOpenFilePicker[36m({
        types: [[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/tasks/task-service.ts[39m:2:33
[31mError[39m: Module '"$lib/types/task"' has no exported member 'TaskPriority'. 
[36mimport { invoke } from '@tauri-apps/api/core';
import type { Task, TaskStatus, [35mTaskPriority[36m } from '$lib/types/task';
import { logger } from '$lib/utils/logger';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/tasks/task-service.ts[39m:287:34
[31mError[39m: Property 'groupId' does not exist on type 'Task'. 
[36m        taskId: id,
        oldGroupId: currentTask?.[35mgroupId[36m, 
        newGroupId,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/tasks/task-service.ts[39m:356:7
[31mError[39m: Object literal may only specify known properties, and 'groupId' does not exist in type 'Task'. 
[36m      parentId: task.parent_id,
      [35mgroupId[36m: task.group_id
    };[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:3:1
[31mError[39m: Identifier expected. 
[36mimport type {
[35mimport[36m { logger } from '$lib/utils/logger';
  Pipeline,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:3:8
[31mError[39m: ',' expected. 
[36mimport type {
import [35m{[36m logger } from '$lib/utils/logger';
  Pipeline,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:3:19
[31mError[39m: ';' expected. 
[36mimport type {
import { logger } [35mfrom[36m '$lib/utils/logger';
  Pipeline,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:12:1
[31mError[39m: Declaration or statement expected. 
[36m  PipelineSearchOptions
[35m}[36m from '$lib/types/automation';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:12:3
[31mError[39m: Unexpected keyword or identifier. 
[36m  PipelineSearchOptions
} [35mfrom[36m '$lib/types/automation';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:3:8
[31mError[39m: String literal expected. 
[36mimport type {
import [35m{ logger }[36m from '$lib/utils/logger';
  Pipeline,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:3:19
[31mError[39m: Cannot find name 'from'. 
[36mimport type {
import { logger } [35mfrom[36m '$lib/utils/logger';
  Pipeline,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:4:3
[31mError[39m: Cannot find name 'Pipeline'. 
[36mimport { logger } from '$lib/utils/logger';
  [35mPipeline[36m,
  PipelineExecution,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:4:3
[31mError[39m: Left side of comma operator is unused and has no side effects. 
[36mimport { logger } from '$lib/utils/logger';
  [35mPipeline[36m,
  PipelineExecution,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:4:3
[31mError[39m: Left side of comma operator is unused and has no side effects. 
[36mimport { logger } from '$lib/utils/logger';
  [35mPipeline,
  PipelineExecution[36m,
  PipelineExecutionRequest,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:4:3
[31mError[39m: Left side of comma operator is unused and has no side effects. 
[36mimport { logger } from '$lib/utils/logger';
  [35mPipeline,
  PipelineExecution,
  PipelineExecutionRequest[36m,
  PipelineProgress,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:4:3
[31mError[39m: Left side of comma operator is unused and has no side effects. 
[36mimport { logger } from '$lib/utils/logger';
  [35mPipeline,
  PipelineExecution,
  PipelineExecutionRequest,
  PipelineProgress[36m,
  PipelineTemplate,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:4:3
[31mError[39m: Left side of comma operator is unused and has no side effects. 
[36mimport { logger } from '$lib/utils/logger';
  [35mPipeline,
  PipelineExecution,
  PipelineExecutionRequest,
  PipelineProgress,
  PipelineTemplate[36m,
  PipelineValidationResult,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:4:3
[31mError[39m: Left side of comma operator is unused and has no side effects. 
[36mimport { logger } from '$lib/utils/logger';
  [35mPipeline,
  PipelineExecution,
  PipelineExecutionRequest,
  PipelineProgress,
  PipelineTemplate,
  PipelineValidationResult[36m,
  PipelineStats,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:4:3
[31mError[39m: Left side of comma operator is unused and has no side effects. 
[36mimport { logger } from '$lib/utils/logger';
  [35mPipeline,
  PipelineExecution,
  PipelineExecutionRequest,
  PipelineProgress,
  PipelineTemplate,
  PipelineValidationResult,
  PipelineStats[36m,
  PipelineSearchOptions[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:5:3
[31mError[39m: Cannot find name 'PipelineExecution'. 
[36m  Pipeline,
  [35mPipelineExecution[36m,
  PipelineExecutionRequest,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:6:3
[31mError[39m: Cannot find name 'PipelineExecutionRequest'. 
[36m  PipelineExecution,
  [35mPipelineExecutionRequest[36m,
  PipelineProgress,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:7:3
[31mError[39m: Cannot find name 'PipelineProgress'. 
[36m  PipelineExecutionRequest,
  [35mPipelineProgress[36m,
  PipelineTemplate,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:8:3
[31mError[39m: Cannot find name 'PipelineTemplate'. 
[36m  PipelineProgress,
  [35mPipelineTemplate[36m,
  PipelineValidationResult,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:9:3
[31mError[39m: Cannot find name 'PipelineValidationResult'. 
[36m  PipelineTemplate,
  [35mPipelineValidationResult[36m,
  PipelineStats,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:10:3
[31mError[39m: Cannot find name 'PipelineStats'. 
[36m  PipelineValidationResult,
  [35mPipelineStats[36m,
  PipelineSearchOptions[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:11:3
[31mError[39m: Cannot find name 'PipelineSearchOptions'. 
[36m  PipelineStats,
  [35mPipelineSearchOptions[36m
} from '$lib/types/automation';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:12:3
[31mError[39m: Cannot find name 'from'. 
[36m  PipelineSearchOptions
} [35mfrom[36m '$lib/types/automation';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:49:36
[31mError[39m: Cannot find name 'Pipeline'. 
[36m  // Pipeline Management
  async getAllPipelines(): Promise<[35mPipeline[36m[]> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:51:27
[31mError[39m: Cannot find name 'Pipeline'. 
[36m    try {
      return await invoke<[35mPipeline[36m[]>('get_all_pipelines');
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:53:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.info('Backend command get_all_pipelines not found, returning empty array');
      // Return empty array since backend is not implemented yet[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:59:42
[31mError[39m: Cannot find name 'Pipeline'. 
[36m
  async getPipeline(id: string): Promise<[35mPipeline[36m> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:61:27
[31mError[39m: Cannot find name 'Pipeline'. 
[36m    try {
      return await invoke<[35mPipeline[36m>('get_pipeline', { id });
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:63:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to get pipeline:', error);
      throw new Error('Pipeline not found');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:68:65
[31mError[39m: Cannot find name 'Pipeline'. 
[36m
  async createPipeline(request: CreatePipelineRequest): Promise<[35mPipeline[36m> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:70:27
[31mError[39m: Cannot find name 'Pipeline'. 
[36m    try {
      return await invoke<[35mPipeline[36m>('create_pipeline', { pipeline: request });
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:72:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to create pipeline:', error);
      // Create a mock pipeline since backend is not implemented[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:74:27
[31mError[39m: Cannot find name 'Pipeline'. 
[36m      // Create a mock pipeline since backend is not implemented
      const mockPipeline: [35mPipeline[36m = {
        id: Date.now().toString(),[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:93:77
[31mError[39m: Cannot find name 'Pipeline'. 
[36m
  async updatePipeline(id: string, request: UpdatePipelineRequest): Promise<[35mPipeline[36m> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:95:27
[31mError[39m: Cannot find name 'Pipeline'. 
[36m    try {
      return await invoke<[35mPipeline[36m>('update_pipeline', { id, pipeline: request });
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:97:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to update pipeline:', error);
      throw new Error('Failed to update pipeline - backend not implemented');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:106:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to delete pipeline:', error);
      // Silently succeed since backend is not implemented[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:112:36
[31mError[39m: Cannot find name 'Pipeline'. 
[36m
  async validatePipeline(pipeline: [35mPipeline[36m): Promise<PipelineValidationResult> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:112:55
[31mError[39m: Cannot find name 'PipelineValidationResult'. 
[36m
  async validatePipeline(pipeline: Pipeline): Promise<[35mPipelineValidationResult[36m> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:114:27
[31mError[39m: Cannot find name 'PipelineValidationResult'. 
[36m    try {
      return await invoke<[35mPipelineValidationResult[36m>('validate_pipeline', { pipeline });
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:116:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to validate pipeline:', error);
      throw new Error('Failed to validate pipeline');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:122:34
[31mError[39m: Cannot find name 'PipelineExecutionRequest'. 
[36m  // Pipeline Execution
  async executePipeline(request: [35mPipelineExecutionRequest[36m): Promise<PipelineExecution> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:122:69
[31mError[39m: Cannot find name 'PipelineExecution'. 
[36m  // Pipeline Execution
  async executePipeline(request: PipelineExecutionRequest): Promise<[35mPipelineExecution[36m> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:124:27
[31mError[39m: Cannot find name 'PipelineExecution'. 
[36m    try {
      return await invoke<[35mPipelineExecution[36m>('execute_pipeline', { request });
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:126:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to execute pipeline:', error);
      throw new Error('Failed to execute pipeline');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:131:43
[31mError[39m: Cannot find name 'PipelineExecution'. 
[36m
  async getExecution(id: string): Promise<[35mPipelineExecution[36m> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:133:27
[31mError[39m: Cannot find name 'PipelineExecution'. 
[36m    try {
      return await invoke<[35mPipelineExecution[36m>('get_pipeline_execution', { id });
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:135:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to get pipeline execution:', error);
      throw new Error('Failed to fetch pipeline execution');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:140:37
[31mError[39m: Cannot find name 'PipelineExecution'. 
[36m
  async getAllExecutions(): Promise<[35mPipelineExecution[36m[]> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:142:27
[31mError[39m: Cannot find name 'PipelineExecution'. 
[36m    try {
      return await invoke<[35mPipelineExecution[36m[]>('get_all_pipeline_executions');
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:144:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to get all pipeline executions:', error);
      throw new Error('Failed to fetch pipeline executions');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:149:62
[31mError[39m: Cannot find name 'PipelineExecution'. 
[36m
  async getExecutionsByPipeline(pipelineId: string): Promise<[35mPipelineExecution[36m[]> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:151:27
[31mError[39m: Cannot find name 'PipelineExecution'. 
[36m    try {
      return await invoke<[35mPipelineExecution[36m[]>('get_pipeline_executions_by_pipeline', { pipelineId });
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:153:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to get pipeline executions by pipeline:', error);
      throw new Error('Failed to fetch pipeline executions');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:162:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to cancel pipeline execution:', error);
      throw new Error('Failed to cancel pipeline execution');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:167:51
[31mError[39m: Cannot find name 'PipelineProgress'. 
[36m
  async getExecutionProgress(id: string): Promise<[35mPipelineProgress[36m> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:169:27
[31mError[39m: Cannot find name 'PipelineProgress'. 
[36m    try {
      return await invoke<[35mPipelineProgress[36m>('get_pipeline_execution_progress', { id });
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:171:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to get pipeline execution progress:', error);
      throw new Error('Failed to fetch pipeline execution progress');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:177:36
[31mError[39m: Cannot find name 'PipelineTemplate'. 
[36m  // Pipeline Templates
  async getAllTemplates(): Promise<[35mPipelineTemplate[36m[]> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:179:27
[31mError[39m: Cannot find name 'PipelineTemplate'. 
[36m    try {
      return await invoke<[35mPipelineTemplate[36m[]>('get_all_pipeline_templates');
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:181:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to get pipeline templates:', error);
      throw new Error('Failed to fetch pipeline templates');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:186:42
[31mError[39m: Cannot find name 'PipelineTemplate'. 
[36m
  async getTemplate(id: string): Promise<[35mPipelineTemplate[36m> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:188:27
[31mError[39m: Cannot find name 'PipelineTemplate'. 
[36m    try {
      return await invoke<[35mPipelineTemplate[36m>('get_pipeline_template', { id });
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:190:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to get pipeline template:', error);
      throw new Error('Failed to fetch pipeline template');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:195:39
[31mError[39m: Cannot find name 'PipelineTemplate'. 
[36m
  async createTemplate(template: Omit<[35mPipelineTemplate[36m, 'id'>): Promise<PipelineTemplate> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:195:73
[31mError[39m: Cannot find name 'PipelineTemplate'. 
[36m
  async createTemplate(template: Omit<PipelineTemplate, 'id'>): Promise<[35mPipelineTemplate[36m> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:197:27
[31mError[39m: Cannot find name 'PipelineTemplate'. 
[36m    try {
      return await invoke<[35mPipelineTemplate[36m>('create_pipeline_template', { template });
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:199:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to create pipeline template:', error);
      throw new Error('Failed to create pipeline template');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:204:54
[31mError[39m: Cannot find name 'PipelineTemplate'. 
[36m
  async updateTemplate(id: string, template: Partial<[35mPipelineTemplate[36m>): Promise<PipelineTemplate> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:204:82
[31mError[39m: Cannot find name 'PipelineTemplate'. 
[36m
  async updateTemplate(id: string, template: Partial<PipelineTemplate>): Promise<[35mPipelineTemplate[36m> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:206:27
[31mError[39m: Cannot find name 'PipelineTemplate'. 
[36m    try {
      return await invoke<[35mPipelineTemplate[36m>('update_pipeline_template', { id, template });
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:208:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to update pipeline template:', error);
      throw new Error('Failed to update pipeline template');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:217:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to delete pipeline template:', error);
      throw new Error('Failed to delete pipeline template');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:223:34
[31mError[39m: Cannot find name 'PipelineSearchOptions'. 
[36m  // Pipeline Search and Filtering
  async searchPipelines(options: [35mPipelineSearchOptions[36m): Promise<Pipeline[]> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:223:66
[31mError[39m: Cannot find name 'Pipeline'. 
[36m  // Pipeline Search and Filtering
  async searchPipelines(options: PipelineSearchOptions): Promise<[35mPipeline[36m[]> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:225:27
[31mError[39m: Cannot find name 'Pipeline'. 
[36m    try {
      return await invoke<[35mPipeline[36m[]>('search_pipelines', { options });
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:227:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to search pipelines:', error);
      throw new Error('Failed to search pipelines');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:232:61
[31mError[39m: Cannot find name 'Pipeline'. 
[36m
  async getPipelinesByFramework(framework: string): Promise<[35mPipeline[36m[]> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:234:27
[31mError[39m: Cannot find name 'Pipeline'. 
[36m    try {
      return await invoke<[35mPipeline[36m[]>('get_pipelines_by_framework', { framework });
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:236:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to get pipelines by framework:', error);
      throw new Error('Failed to fetch pipelines by framework');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:241:49
[31mError[39m: Cannot find name 'Pipeline'. 
[36m
  async getPipelinesByTag(tag: string): Promise<[35mPipeline[36m[]> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:243:27
[31mError[39m: Cannot find name 'Pipeline'. 
[36m    try {
      return await invoke<[35mPipeline[36m[]>('get_pipelines_by_tag', { tag });
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:245:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to get pipelines by tag:', error);
      throw new Error('Failed to fetch pipelines by tag');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:251:37
[31mError[39m: Cannot find name 'PipelineStats'. 
[36m  // Pipeline Statistics and Analytics
  async getPipelineStats(): Promise<[35mPipelineStats[36m> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:253:27
[31mError[39m: Cannot find name 'PipelineStats'. 
[36m    try {
      return await invoke<[35mPipelineStats[36m>('get_pipeline_stats');
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:255:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to get pipeline stats:', error);
      throw new Error('Failed to fetch pipeline stats');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:264:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to get pipeline execution stats:', error);
      throw new Error('Failed to fetch pipeline execution stats');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:274:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to export pipeline:', error);
      throw new Error('Failed to export pipeline');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:279:55
[31mError[39m: Cannot find name 'Pipeline'. 
[36m
  async importPipeline(pipelineData: string): Promise<[35mPipeline[36m> {
    try {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:281:27
[31mError[39m: Cannot find name 'Pipeline'. 
[36m    try {
      return await invoke<[35mPipeline[36m>('import_pipeline', { pipelineData });
    } catch (error) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:283:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to import pipeline:', error);
      throw new Error('Failed to import pipeline');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:293:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to schedule pipeline:', error);
      throw new Error('Failed to schedule pipeline');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:302:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to get scheduled pipelines:', error);
      throw new Error('Failed to fetch scheduled pipelines');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/services/automation/automation-service.ts[39m:311:7
[31mError[39m: Cannot find name 'logger'. 
[36m    } catch (error) {
      [35mlogger[36m.error('Failed to cancel scheduled pipeline:', error);
      throw new Error('Failed to cancel scheduled pipeline');[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/stores/live-data-store.ts[39m:199:21
[31mError[39m: Cannot find name '$namespaceState'. 
[36m$effect(() => {
  const namespace = [35m$namespaceState[36m.selected;
  if (namespace) {[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/AdvancedFilter.svelte[39m:242:20
[31mError[39m: Mixing old (on:change) and new syntaxes for event handling is not allowed. Use only the onchange syntax
https://svelte.dev/e/mixed_event_handler_syntaxes (svelte)
[36m                   checked={group.enabled}
                   [35mon:change={(e) => updateFilterGroup(group.id, { enabled: (e.target as HTMLInputElement).checked })}[36m
                   class="rounded border-slate-300 dark:border-slate-600"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/utils/filter-utils.ts[39m:30:20
[31mError[39m: Property 'namespace' does not exist on type 'K8sLog'. 
[36m    level: log.level,
    namespace: log.[35mnamespace[36m,
    pod: log.pod,[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/AdvancedSearchPanel.svelte[39m:171:11
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m        {#each searchExamples as example}
          [35m<div class="p-2 border border-slate-200 dark:border-slate-700 rounded bg-slate-50 dark:bg-slate-900 hover:bg-slate-100 dark:hover:bg-slate-800 cursor-pointer"
               onclick={() => useExample(example.query)}>
            <div class="text-xs font-mono text-blue-600 dark:text-blue-400 mb-1">
              {example.query}
            </div>
            <div class="text-xs text-slate-600 dark:text-slate-400">
              {example.description}
            </div>
          </div>[36m
        {/each}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/AdvancedSearchPanel.svelte[39m:171:11
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m        {#each searchExamples as example}
          [35m<div class="p-2 border border-slate-200 dark:border-slate-700 rounded bg-slate-50 dark:bg-slate-900 hover:bg-slate-100 dark:hover:bg-slate-800 cursor-pointer"
               onclick={() => useExample(example.query)}>
            <div class="text-xs font-mono text-blue-600 dark:text-blue-400 mb-1">
              {example.query}
            </div>
            <div class="text-xs text-slate-600 dark:text-slate-400">
              {example.description}
            </div>
          </div>[36m
        {/each}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/AdvancedSearchPanel.svelte[39m:15:7
[33mWarn[39m: `showAdvancedSearch` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m
  let [35mshowAdvancedSearch[36m = false;
  let searchExamples = [[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/AdvancedSearchPanel.svelte[39m:125:9
[31mError[39m: Cannot use 'bind:' with this property. It is declared as non-bindable inside the component.
To mark a property as bindable: 'let { value = $bindable() } = $props()' (ts)
[36m        type="text"
        [35mbind:value={searchQuery}[36m
        placeholder="Search functionality coming soon..."[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/CentralizedTerminal.svelte[39m:314:23
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m          </span>
                      [35m<span 
              class="remove-tab"
              onclick={(e) => { e.stopPropagation(); removeProcess(process.id); }}
              title="Remove from history"
              role="button"
              tabindex="0"
            >
              ×
            </span>[36m
          </Button>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ConfigTreeEditor.svelte[39m:111:13
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m          <div>
            [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
              Key
            </label>[36m
            <Input[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ConfigTreeEditor.svelte[39m:122:13
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m          <div>
            [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
              Value
            </label>[36m
            <Input[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ConfigTreeEditor.svelte[39m:161:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div class="key-section mb-2">
                  [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Key
                  </label>[36m
                  <input[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ConfigTreeEditor.svelte[39m:172:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div class="value-section">
                  [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Value
                  </label>[36m
                  {#if readOnly}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ConfigTreeEditor.svelte[39m:186:42
[33mWarn[39m: Self-closing HTML tags for non-void elements are ambiguous — use `<textarea ...></textarea>` rather than `<textarea ... />`
https://svelte.dev/e/element_invalid_self_closing_tag (svelte)
[36m                  {:else}
                                         [35m<textarea
                       value={value}
                       oninput={(e) => updateValue(key, (e.target as HTMLTextAreaElement).value)}
                       rows={isJson(value) ? 6 : 2}
                       class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white font-mono text-sm resize-y"
                       placeholder="Enter value"
                     />[36m
                  {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ConfigTreeEditor.svelte[39m:116:15
[31mError[39m: Cannot use 'bind:' with this property. It is declared as non-bindable inside the component.
To mark a property as bindable: 'let { value = $bindable() } = $props()' (ts)
[36m              type="text"
              [35mbind:value={newKey}[36m
              placeholder="Enter key name"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ConfigTreeEditor.svelte[39m:127:15
[31mError[39m: Cannot use 'bind:' with this property. It is declared as non-bindable inside the component.
To mark a property as bindable: 'let { value = $bindable() } = $props()' (ts)
[36m              type="text"
              [35mbind:value={newValue}[36m
              placeholder="Enter value"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/FrameworkSelector.svelte[39m:128:3
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m<div class="space-y-2">
  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300">
    Framework
  </label>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NonBlockingTerminal.svelte[39m:413:11
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m          disabled={isRunning}
          [35mclass[36m="h-auto p-3 flex flex-col items-center text-sm {selectedCommand === command.command ? 'bg-blue-50 dark:bg-blue-900/20 border-blue-500' : ''}"
        >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NonBlockingTerminal.svelte[39m:433:13
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m            disabled={isRunning}
            [35mclass[36m="h-auto p-3 flex flex-col items-center text-sm {selectedCommand === script.command ? 'bg-blue-50 dark:bg-blue-900/20 border-blue-500' : ''}"
          >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NonBlockingTerminal.svelte[39m:486:17
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m                size="sm"
                [35mclass[36m="text-red-600 hover:text-red-700 border-red-300 hover:border-red-400"
              >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/NonBlockingTerminal.svelte[39m:504:13
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m            size="sm"
            [35mclass[36m="text-blue-600 hover:text-blue-700 border-blue-300 hover:border-blue-400"
          >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/PipelineEditor.svelte[39m:353:9
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m      <div class="form-group">
        [35m<label>Tags</label>[36m
        <div class="tags-input">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/PipelineEditor.svelte[39m:371:15
[33mWarn[39m: Using `on:keydown` to listen to the keydown event is deprecated. Use the event attribute `onkeydown` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m              class="form-input"
              [35mon:keydown={(e) => e.key === 'Enter' && addTag()}[36m
            />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/PipelineEditor.svelte[39m:764:3
[33mWarn[39m: Unused CSS selector ".tag-remove"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.tag-remove[36m {
    margin-left: 0.25rem;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/PipelineEditor.svelte[39m:772:3
[33mWarn[39m: Unused CSS selector ".tag-remove:hover"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.tag-remove:hover[36m {
    color: #dc2626;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/PipelineEditor.svelte[39m:847:3
[33mWarn[39m: Unused CSS selector ".remove-btn"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.remove-btn[36m {
    background: none;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/PipelineEditor.svelte[39m:856:3
[33mWarn[39m: Unused CSS selector ".remove-btn:hover"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.remove-btn:hover[36m {
    background: #f3f4f6;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/PipelineExecutor.svelte[39m:298:5
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m  {#if showExecutionModal && selectedPipeline}
    [35m<div class="modal-overlay" onclick={() => showExecutionModal = false}>
      <div class="modal-content" onclick={(e) => e.stopPropagation()}>
        <div class="modal-header">
          <h3>Run Pipeline: {selectedPipeline.name}</h3>
                      <Button variant="ghost" size="sm" on:click={() => showExecutionModal = false}>
              <Icon icon="mdi:close" class="w-5 h-5" />
            </Button>
        </div>

        <div class="modal-body">
          <p class="pipeline-description">{selectedPipeline.description}</p>
          
          {#if selectedPipeline.variables.length > 0}
            <div class="variables-section">
              <h4>Pipeline Variables</h4>
              <div class="variables-list">
                {#each selectedPipeline.variables as variable}
                  <div class="variable-item">
                    <label for={variable.name}>
                      {variable.name}
                      {#if variable.required}
                        <span class="required">*</span>
                      {/if}
                    </label>
                    {#if variable.description}
                      <p class="variable-description">{variable.description}</p>
                    {/if}
                    
                    {#if variable.type === 'boolean'}
                      <label class="checkbox-label">
                        <input
                          type="checkbox"
                          bind:checked={variableValues[variable.name]}
                        />
                        {variable.name}
                      </label>
                    {:else if variable.type === 'select' && variable.options}
                      <select
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        class="form-select"
                        required={variable.required}
                      >
                        <option value="">Select {variable.name}</option>
                        {#each variable.options as option}
                          <option value={option}>{option}</option>
                        {/each}
                      </select>
                    {:else if variable.type === 'number'}
                      <input
                        type="number"
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        placeholder={variable.defaultValue?.toString() || `Enter ${variable.name}`}
                        class="form-input"
                        required={variable.required}
                      />
                    {:else}
                      <input
                        type="text"
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        placeholder={variable.defaultValue?.toString() || `Enter ${variable.name}`}
                        class="form-input"
                        required={variable.required}
                      />
                    {/if}
                  </div>
                {/each}
              </div>
            </div>
          {:else}
            <p class="no-variables">This pipeline has no configurable variables.</p>
          {/if}

          <div class="runtime-variables">
            <h4>Runtime Variables</h4>
            <p class="runtime-info">These variables will be automatically provided:</p>
            <div class="runtime-list">
              <div class="runtime-item">
                <span class="variable-name">PROJECT_NAME</span>
                <span class="variable-value">{projectName}</span>
              </div>
              <div class="runtime-item">
                <span class="variable-name">PROJECT_PATH</span>
                <span class="variable-value">{projectPath}</span>
              </div>
              <div class="runtime-item">
                <span class="variable-name">PROJECT_NAMESPACE</span>
                <span class="variable-value">{projectNamespace}</span>
              </div>
              {#if projectFramework}
                <div class="runtime-item">
                  <span class="variable-name">PROJECT_FRAMEWORK</span>
                  <span class="variable-value">{projectFramework}</span>
                </div>
              {/if}
            </div>
          </div>
        </div>

        <div class="modal-footer">
          <Button variant="outline" on:click={() => showExecutionModal = false}>
            Cancel
          </Button>
          <Button on:click={executePipeline} disabled={isLoading}>
            <Icon icon="mdi:play" class="w-4 h-4 mr-2" />
            {isLoading ? 'Starting...' : 'Run Pipeline'}
          </Button>
        </div>
      </div>
    </div>[36m
  {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/PipelineExecutor.svelte[39m:298:5
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m  {#if showExecutionModal && selectedPipeline}
    [35m<div class="modal-overlay" onclick={() => showExecutionModal = false}>
      <div class="modal-content" onclick={(e) => e.stopPropagation()}>
        <div class="modal-header">
          <h3>Run Pipeline: {selectedPipeline.name}</h3>
                      <Button variant="ghost" size="sm" on:click={() => showExecutionModal = false}>
              <Icon icon="mdi:close" class="w-5 h-5" />
            </Button>
        </div>

        <div class="modal-body">
          <p class="pipeline-description">{selectedPipeline.description}</p>
          
          {#if selectedPipeline.variables.length > 0}
            <div class="variables-section">
              <h4>Pipeline Variables</h4>
              <div class="variables-list">
                {#each selectedPipeline.variables as variable}
                  <div class="variable-item">
                    <label for={variable.name}>
                      {variable.name}
                      {#if variable.required}
                        <span class="required">*</span>
                      {/if}
                    </label>
                    {#if variable.description}
                      <p class="variable-description">{variable.description}</p>
                    {/if}
                    
                    {#if variable.type === 'boolean'}
                      <label class="checkbox-label">
                        <input
                          type="checkbox"
                          bind:checked={variableValues[variable.name]}
                        />
                        {variable.name}
                      </label>
                    {:else if variable.type === 'select' && variable.options}
                      <select
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        class="form-select"
                        required={variable.required}
                      >
                        <option value="">Select {variable.name}</option>
                        {#each variable.options as option}
                          <option value={option}>{option}</option>
                        {/each}
                      </select>
                    {:else if variable.type === 'number'}
                      <input
                        type="number"
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        placeholder={variable.defaultValue?.toString() || `Enter ${variable.name}`}
                        class="form-input"
                        required={variable.required}
                      />
                    {:else}
                      <input
                        type="text"
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        placeholder={variable.defaultValue?.toString() || `Enter ${variable.name}`}
                        class="form-input"
                        required={variable.required}
                      />
                    {/if}
                  </div>
                {/each}
              </div>
            </div>
          {:else}
            <p class="no-variables">This pipeline has no configurable variables.</p>
          {/if}

          <div class="runtime-variables">
            <h4>Runtime Variables</h4>
            <p class="runtime-info">These variables will be automatically provided:</p>
            <div class="runtime-list">
              <div class="runtime-item">
                <span class="variable-name">PROJECT_NAME</span>
                <span class="variable-value">{projectName}</span>
              </div>
              <div class="runtime-item">
                <span class="variable-name">PROJECT_PATH</span>
                <span class="variable-value">{projectPath}</span>
              </div>
              <div class="runtime-item">
                <span class="variable-name">PROJECT_NAMESPACE</span>
                <span class="variable-value">{projectNamespace}</span>
              </div>
              {#if projectFramework}
                <div class="runtime-item">
                  <span class="variable-name">PROJECT_FRAMEWORK</span>
                  <span class="variable-value">{projectFramework}</span>
                </div>
              {/if}
            </div>
          </div>
        </div>

        <div class="modal-footer">
          <Button variant="outline" on:click={() => showExecutionModal = false}>
            Cancel
          </Button>
          <Button on:click={executePipeline} disabled={isLoading}>
            <Icon icon="mdi:play" class="w-4 h-4 mr-2" />
            {isLoading ? 'Starting...' : 'Run Pipeline'}
          </Button>
        </div>
      </div>
    </div>[36m
  {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/PipelineExecutor.svelte[39m:299:7
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m    <div class="modal-overlay" onclick={() => showExecutionModal = false}>
      [35m<div class="modal-content" onclick={(e) => e.stopPropagation()}>
        <div class="modal-header">
          <h3>Run Pipeline: {selectedPipeline.name}</h3>
                      <Button variant="ghost" size="sm" on:click={() => showExecutionModal = false}>
              <Icon icon="mdi:close" class="w-5 h-5" />
            </Button>
        </div>

        <div class="modal-body">
          <p class="pipeline-description">{selectedPipeline.description}</p>
          
          {#if selectedPipeline.variables.length > 0}
            <div class="variables-section">
              <h4>Pipeline Variables</h4>
              <div class="variables-list">
                {#each selectedPipeline.variables as variable}
                  <div class="variable-item">
                    <label for={variable.name}>
                      {variable.name}
                      {#if variable.required}
                        <span class="required">*</span>
                      {/if}
                    </label>
                    {#if variable.description}
                      <p class="variable-description">{variable.description}</p>
                    {/if}
                    
                    {#if variable.type === 'boolean'}
                      <label class="checkbox-label">
                        <input
                          type="checkbox"
                          bind:checked={variableValues[variable.name]}
                        />
                        {variable.name}
                      </label>
                    {:else if variable.type === 'select' && variable.options}
                      <select
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        class="form-select"
                        required={variable.required}
                      >
                        <option value="">Select {variable.name}</option>
                        {#each variable.options as option}
                          <option value={option}>{option}</option>
                        {/each}
                      </select>
                    {:else if variable.type === 'number'}
                      <input
                        type="number"
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        placeholder={variable.defaultValue?.toString() || `Enter ${variable.name}`}
                        class="form-input"
                        required={variable.required}
                      />
                    {:else}
                      <input
                        type="text"
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        placeholder={variable.defaultValue?.toString() || `Enter ${variable.name}`}
                        class="form-input"
                        required={variable.required}
                      />
                    {/if}
                  </div>
                {/each}
              </div>
            </div>
          {:else}
            <p class="no-variables">This pipeline has no configurable variables.</p>
          {/if}

          <div class="runtime-variables">
            <h4>Runtime Variables</h4>
            <p class="runtime-info">These variables will be automatically provided:</p>
            <div class="runtime-list">
              <div class="runtime-item">
                <span class="variable-name">PROJECT_NAME</span>
                <span class="variable-value">{projectName}</span>
              </div>
              <div class="runtime-item">
                <span class="variable-name">PROJECT_PATH</span>
                <span class="variable-value">{projectPath}</span>
              </div>
              <div class="runtime-item">
                <span class="variable-name">PROJECT_NAMESPACE</span>
                <span class="variable-value">{projectNamespace}</span>
              </div>
              {#if projectFramework}
                <div class="runtime-item">
                  <span class="variable-name">PROJECT_FRAMEWORK</span>
                  <span class="variable-value">{projectFramework}</span>
                </div>
              {/if}
            </div>
          </div>
        </div>

        <div class="modal-footer">
          <Button variant="outline" on:click={() => showExecutionModal = false}>
            Cancel
          </Button>
          <Button on:click={executePipeline} disabled={isLoading}>
            <Icon icon="mdi:play" class="w-4 h-4 mr-2" />
            {isLoading ? 'Starting...' : 'Run Pipeline'}
          </Button>
        </div>
      </div>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/PipelineExecutor.svelte[39m:299:7
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m    <div class="modal-overlay" onclick={() => showExecutionModal = false}>
      [35m<div class="modal-content" onclick={(e) => e.stopPropagation()}>
        <div class="modal-header">
          <h3>Run Pipeline: {selectedPipeline.name}</h3>
                      <Button variant="ghost" size="sm" on:click={() => showExecutionModal = false}>
              <Icon icon="mdi:close" class="w-5 h-5" />
            </Button>
        </div>

        <div class="modal-body">
          <p class="pipeline-description">{selectedPipeline.description}</p>
          
          {#if selectedPipeline.variables.length > 0}
            <div class="variables-section">
              <h4>Pipeline Variables</h4>
              <div class="variables-list">
                {#each selectedPipeline.variables as variable}
                  <div class="variable-item">
                    <label for={variable.name}>
                      {variable.name}
                      {#if variable.required}
                        <span class="required">*</span>
                      {/if}
                    </label>
                    {#if variable.description}
                      <p class="variable-description">{variable.description}</p>
                    {/if}
                    
                    {#if variable.type === 'boolean'}
                      <label class="checkbox-label">
                        <input
                          type="checkbox"
                          bind:checked={variableValues[variable.name]}
                        />
                        {variable.name}
                      </label>
                    {:else if variable.type === 'select' && variable.options}
                      <select
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        class="form-select"
                        required={variable.required}
                      >
                        <option value="">Select {variable.name}</option>
                        {#each variable.options as option}
                          <option value={option}>{option}</option>
                        {/each}
                      </select>
                    {:else if variable.type === 'number'}
                      <input
                        type="number"
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        placeholder={variable.defaultValue?.toString() || `Enter ${variable.name}`}
                        class="form-input"
                        required={variable.required}
                      />
                    {:else}
                      <input
                        type="text"
                        id={variable.name}
                        bind:value={variableValues[variable.name]}
                        placeholder={variable.defaultValue?.toString() || `Enter ${variable.name}`}
                        class="form-input"
                        required={variable.required}
                      />
                    {/if}
                  </div>
                {/each}
              </div>
            </div>
          {:else}
            <p class="no-variables">This pipeline has no configurable variables.</p>
          {/if}

          <div class="runtime-variables">
            <h4>Runtime Variables</h4>
            <p class="runtime-info">These variables will be automatically provided:</p>
            <div class="runtime-list">
              <div class="runtime-item">
                <span class="variable-name">PROJECT_NAME</span>
                <span class="variable-value">{projectName}</span>
              </div>
              <div class="runtime-item">
                <span class="variable-name">PROJECT_PATH</span>
                <span class="variable-value">{projectPath}</span>
              </div>
              <div class="runtime-item">
                <span class="variable-name">PROJECT_NAMESPACE</span>
                <span class="variable-value">{projectNamespace}</span>
              </div>
              {#if projectFramework}
                <div class="runtime-item">
                  <span class="variable-name">PROJECT_FRAMEWORK</span>
                  <span class="variable-value">{projectFramework}</span>
                </div>
              {/if}
            </div>
          </div>
        </div>

        <div class="modal-footer">
          <Button variant="outline" on:click={() => showExecutionModal = false}>
            Cancel
          </Button>
          <Button on:click={executePipeline} disabled={isLoading}>
            <Icon icon="mdi:play" class="w-4 h-4 mr-2" />
            {isLoading ? 'Starting...' : 'Run Pipeline'}
          </Button>
        </div>
      </div>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/PipelineExecutor.svelte[39m:415:15
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m    <div class="modal-overlay">
              [35m<div class="modal-content progress-modal" onclick={(e) => e.stopPropagation()}>
        <div class="modal-header">
          <h3>Pipeline Execution Progress</h3>
                      <Button variant="ghost" size="sm" on:click={closeProgressModal}>
              <Icon icon="mdi:close" class="w-5 h-5" />
            </Button>
        </div>

        <div class="modal-body">
          <div class="execution-info">
            <div class="execution-header">
              <Icon icon={getStatusIcon(progress.status)} class="w-6 h-6 {getStatusColor(progress.status)}" />
              <div class="execution-details">
                <h4>{selectedPipeline?.name}</h4>
                <p class="execution-status {getStatusColor(progress.status)}">
                  {progress.status.charAt(0).toUpperCase() + progress.status.slice(1)}
                </p>
              </div>
            </div>

            <div class="progress-bar">
              <div class="progress-fill" style="width: {progress.progress}%"></div>
            </div>
            <p class="progress-text">{progress.progress}% complete ({progress.completedSteps}/{progress.totalSteps} steps)</p>

            {#if progress.estimatedTimeRemaining}
              <p class="eta">Estimated time remaining: {formatDuration(progress.estimatedTimeRemaining * 1000)}</p>
            {/if}
          </div>

          <div class="steps-progress">
            <h4>Step Progress</h4>
            <div class="steps-list">
              {#each progress.steps as step}
                <div class="step-item">
                  <div class="step-header">
                    <Icon icon={getStatusIcon(step.status)} class="w-4 h-4 {getStatusColor(step.status)}" />
                    <span class="step-name">{step.name}</span>
                    {#if step.duration}
                      <span class="step-duration">{formatDuration(step.duration)}</span>
                    {/if}
                  </div>
                  {#if step.message}
                    <p class="step-message">{step.message}</p>
                  {/if}
                  {#if step.progress !== undefined}
                    <div class="step-progress-bar">
                      <div class="step-progress-fill" style="width: {step.progress}%"></div>
                    </div>
                  {/if}
                </div>
              {/each}
            </div>
          </div>
        </div>

        <div class="modal-footer">
          {#if progress.status === 'running'}
            <Button variant="outline" on:click={cancelExecution}>
              <Icon icon="mdi:cancel" class="w-4 h-4 mr-2" />
              Cancel Execution
            </Button>
          {:else}
            <Button on:click={closeProgressModal}>
              Close
            </Button>
          {/if}
        </div>
      </div>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/PipelineExecutor.svelte[39m:415:15
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m    <div class="modal-overlay">
              [35m<div class="modal-content progress-modal" onclick={(e) => e.stopPropagation()}>
        <div class="modal-header">
          <h3>Pipeline Execution Progress</h3>
                      <Button variant="ghost" size="sm" on:click={closeProgressModal}>
              <Icon icon="mdi:close" class="w-5 h-5" />
            </Button>
        </div>

        <div class="modal-body">
          <div class="execution-info">
            <div class="execution-header">
              <Icon icon={getStatusIcon(progress.status)} class="w-6 h-6 {getStatusColor(progress.status)}" />
              <div class="execution-details">
                <h4>{selectedPipeline?.name}</h4>
                <p class="execution-status {getStatusColor(progress.status)}">
                  {progress.status.charAt(0).toUpperCase() + progress.status.slice(1)}
                </p>
              </div>
            </div>

            <div class="progress-bar">
              <div class="progress-fill" style="width: {progress.progress}%"></div>
            </div>
            <p class="progress-text">{progress.progress}% complete ({progress.completedSteps}/{progress.totalSteps} steps)</p>

            {#if progress.estimatedTimeRemaining}
              <p class="eta">Estimated time remaining: {formatDuration(progress.estimatedTimeRemaining * 1000)}</p>
            {/if}
          </div>

          <div class="steps-progress">
            <h4>Step Progress</h4>
            <div class="steps-list">
              {#each progress.steps as step}
                <div class="step-item">
                  <div class="step-header">
                    <Icon icon={getStatusIcon(step.status)} class="w-4 h-4 {getStatusColor(step.status)}" />
                    <span class="step-name">{step.name}</span>
                    {#if step.duration}
                      <span class="step-duration">{formatDuration(step.duration)}</span>
                    {/if}
                  </div>
                  {#if step.message}
                    <p class="step-message">{step.message}</p>
                  {/if}
                  {#if step.progress !== undefined}
                    <div class="step-progress-bar">
                      <div class="step-progress-fill" style="width: {step.progress}%"></div>
                    </div>
                  {/if}
                </div>
              {/each}
            </div>
          </div>
        </div>

        <div class="modal-footer">
          {#if progress.status === 'running'}
            <Button variant="outline" on:click={cancelExecution}>
              <Icon icon="mdi:cancel" class="w-4 h-4 mr-2" />
              Cancel Execution
            </Button>
          {:else}
            <Button on:click={closeProgressModal}>
              Close
            </Button>
          {/if}
        </div>
      </div>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ProjectDeploymentSelector.svelte[39m:92:3
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m<div class="space-y-2">
  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300">
    Linked Deployment (Optional)
  </label>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:104:13
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m            class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors"
            [35mon:click={() => isExpanded = !isExpanded}[36m
          >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:115:11
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          class="flex-shrink-0 w-5 h-5 rounded-full border-2 border-gray-300 hover:border-gray-400 transition-colors {task.status === 'completed' ? 'bg-green-500 border-green-500' : ''}"
          [35mon:click={handleStatusToggle}[36m
        >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:132:15
[33mWarn[39m: Self-closing HTML tags for non-void elements are ambiguous — use `<textarea ...></textarea>` rather than `<textarea ... />`
https://svelte.dev/e/element_invalid_self_closing_tag (svelte)
[36m              />
              [35m<textarea
                bind:value={editDescription}
                class="w-full px-3 py-1 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                placeholder="Task description (optional)"
                rows="2"
              />[36m
              <div class="flex space-x-2">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:183:13
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m            class="p-1 hover:bg-gray-100 dark:hover:bg-gray-700 rounded transition-colors"
            [35mon:click={() => dispatch('priorityMenu', { taskId: task.id, priority: task.priority })}[36m
          >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:200:13
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          <button
            [35mon:click={() => showAddSubtask = !showAddSubtask}[36m
            class="p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:207:13
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          <button
            [35mon:click={handleEdit}[36m
            class="p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:214:13
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          <button
            [35mon:click={handleDelete}[36m
            class="p-1 text-gray-400 hover:text-red-600 dark:hover:text-red-400 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:234:11
[33mWarn[39m: Self-closing HTML tags for non-void elements are ambiguous — use `<textarea ...></textarea>` rather than `<textarea ... />`
https://svelte.dev/e/element_invalid_self_closing_tag (svelte)
[36m          />
          [35m<textarea
            bind:value={newSubtaskDescription}
            class="w-full px-3 py-1 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            placeholder="Subtask description (optional)"
            rows="2"
          />[36m
          <div class="flex space-x-2">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:242:15
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m            <button
              [35mon:click={handleAddSubtask}[36m
              class="px-3 py-1 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors text-sm"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:248:15
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m            <button
              [35mon:click={() => showAddSubtask = false}[36m
              class="px-3 py-1 bg-gray-300 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-400 dark:hover:bg-gray-500 transition-colors text-sm"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:263:9
[33mWarn[39m: `<svelte:self>` is deprecated — use self-imports (e.g. `import Self from './Self.svelte'`) instead
https://svelte.dev/e/svelte_self_deprecated (svelte)
[36m      {#each task.subtasks as subtask (subtask.id)}
        [35m<svelte:self 
          task={subtask} 
          depth={depth + 1} 
          showSubtasks={showSubtasks}
        />[36m
      {/each}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:16:7
[33mWarn[39m: `isExpanded` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m
  let [35misExpanded[36m = true;
  let isEditing = false;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:17:7
[33mWarn[39m: `isEditing` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let isExpanded = true;
  let [35misEditing[36m = false;
  let editTitle = task.title;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:18:7
[33mWarn[39m: `editTitle` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let isEditing = false;
  let [35meditTitle[36m = task.title;
  let editDescription = task.description || '';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:19:7
[33mWarn[39m: `editDescription` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let editTitle = task.title;
  let [35meditDescription[36m = task.description || '';
  let showAddSubtask = false;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:20:7
[33mWarn[39m: `showAddSubtask` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let editDescription = task.description || '';
  let [35mshowAddSubtask[36m = false;
  let newSubtaskTitle = '';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:21:7
[33mWarn[39m: `newSubtaskTitle` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let showAddSubtask = false;
  let [35mnewSubtaskTitle[36m = '';
  let newSubtaskDescription = '';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:22:7
[33mWarn[39m: `newSubtaskDescription` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let newSubtaskTitle = '';
  let [35mnewSubtaskDescription[36m = '';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:186:21
[31mError[39m: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ low: string; medium: string; high: string; }'. (ts)
[36m            <Icon 
              icon={[35mpriorityIcons[task.priority][36m} 
              class="w-4 h-4 {priorityColors[task.priority]}"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:187:31
[31mError[39m: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ low: string; medium: string; high: string; }'. (ts)
[36m              icon={priorityIcons[task.priority]} 
              class="w-4 h-4 {[35mpriorityColors[task.priority][36m}" 
            />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskItem.svelte[39m:193:66
[31mError[39m: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ pending: string; 'in-progress': string; completed: string; cancelled: string; }'. (ts)
[36m        <!-- Status Badge -->
        <span class="px-2 py-1 text-xs font-medium rounded-full {[35mstatusColors[task.status][36m}">
          {task.status.replace('-', ' ')}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:80:11
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors"
          [35mon:click={() => isExpanded = !isExpanded}[36m
        >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:100:17
[33mWarn[39m: Using `on:keydown` to listen to the keydown event is deprecated. Use the event attribute `onkeydown` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m                placeholder="Group name"
                [35mon:keydown={handleKeydown}[36m
              />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:102:15
[33mWarn[39m: Self-closing HTML tags for non-void elements are ambiguous — use `<textarea ...></textarea>` rather than `<textarea ... />`
https://svelte.dev/e/element_invalid_self_closing_tag (svelte)
[36m              />
              [35m<textarea
                bind:value={editDescription}
                class="w-full px-3 py-1 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                placeholder="Group description (optional)"
                rows="2"
                on:keydown={handleKeydown}
              />[36m
              <div class="flex space-x-2">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:107:17
[33mWarn[39m: Using `on:keydown` to listen to the keydown event is deprecated. Use the event attribute `onkeydown` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m                rows="2"
                [35mon:keydown={handleKeydown}[36m
              />[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:149:11
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m        <button
          [35mon:click={() => showAddTask = !showAddTask}[36m
          class="px-3 py-1 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors text-sm flex items-center space-x-1"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:156:11
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m        <button
          [35mon:click={handleEdit}[36m
          class="p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:163:11
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m        <button
          [35mon:click={handleDelete}[36m
          class="p-1 text-gray-400 hover:text-red-600 dark:hover:text-red-400 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:182:11
[33mWarn[39m: Self-closing HTML tags for non-void elements are ambiguous — use `<textarea ...></textarea>` rather than `<textarea ... />`
https://svelte.dev/e/element_invalid_self_closing_tag (svelte)
[36m          />
          [35m<textarea
            bind:value={newTaskDescription}
            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            placeholder="Task description (optional)"
            rows="3"
          />[36m
          <div class="flex space-x-2">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:190:15
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m            <button
              [35mon:click={handleAddTask}[36m
              class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:196:15
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m            <button
              [35mon:click={() => showAddTask = false}[36m
              class="px-4 py-2 bg-gray-300 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-400 dark:hover:bg-gray-500 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:15:7
[33mWarn[39m: `isExpanded` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m
  let [35misExpanded[36m = true;
  let isEditing = false;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:16:7
[33mWarn[39m: `isEditing` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let isExpanded = true;
  let [35misEditing[36m = false;
  let editName = group.name;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:17:7
[33mWarn[39m: `editName` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let isEditing = false;
  let [35meditName[36m = group.name;
  let editDescription = group.description || '';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:18:7
[33mWarn[39m: `editDescription` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let editName = group.name;
  let [35meditDescription[36m = group.description || '';
  let showAddTask = false;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:19:7
[33mWarn[39m: `showAddTask` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let editDescription = group.description || '';
  let [35mshowAddTask[36m = false;
  let newTaskTitle = '';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:20:7
[33mWarn[39m: `newTaskTitle` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let showAddTask = false;
  let [35mnewTaskTitle[36m = '';
  let newTaskDescription = '';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskGroup.svelte[39m:21:7
[33mWarn[39m: `newTaskDescription` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let newTaskTitle = '';
  let [35mnewTaskDescription[36m = '';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskFilters.svelte[39m:78:5
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m  <div class="mb-4">
    [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
      Search Tasks
    </label>[36m
    <div class="relative">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskFilters.svelte[39m:94:5
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m  <div class="mb-4">
    [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
      Status
    </label>[36m
    <div class="flex flex-wrap gap-2">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskFilters.svelte[39m:116:5
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m  <div class="mb-4">
    [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
      Priority
    </label>[36m
    <div class="flex flex-wrap gap-2">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskFilters.svelte[39m:7:7
[33mWarn[39m: `searchTerm` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m
  let [35msearchTerm[36m = '';
  let selectedStatuses: TaskStatus[] = [];[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskFilters.svelte[39m:8:7
[33mWarn[39m: `selectedStatuses` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let searchTerm = '';
  let [35mselectedStatuses: TaskStatus[][36m = [];
  let selectedPriorities: string[] = [];[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskFilters.svelte[39m:9:7
[33mWarn[39m: `selectedPriorities` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let selectedStatuses: TaskStatus[] = [];
  let [35mselectedPriorities: string[][36m = [];[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ProjectTaskManager.svelte[39m:84:9
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m      <button
        [35mon:click={() => showAddGroup = !showAddGroup}[36m
        class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors flex items-center space-x-2"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ProjectTaskManager.svelte[39m:156:11
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m        <div>
          [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Group Name
          </label>[36m
          <input[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ProjectTaskManager.svelte[39m:168:11
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m        <div>
          [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Description (optional)
          </label>[36m
          <textarea[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ProjectTaskManager.svelte[39m:180:11
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m        <div>
          [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Color
          </label>[36m
          <div class="flex flex-wrap gap-2">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ProjectTaskManager.svelte[39m:185:15
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m            {#each colorOptions as color}
              [35m<button
                on:click={() => newGroupColor = color}
                class="w-8 h-8 rounded-full border-2 transition-all {newGroupColor === color ? 'border-gray-900 dark:border-gray-100 scale-110' : 'border-gray-300 dark:border-gray-600 hover:scale-105'}"
                style="background-color: {color}"
              ></button>[36m
            {/each}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ProjectTaskManager.svelte[39m:186:17
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m              <button
                [35mon:click={() => newGroupColor = color}[36m
                class="w-8 h-8 rounded-full border-2 transition-all {newGroupColor === color ? 'border-gray-900 dark:border-gray-100 scale-110' : 'border-gray-300 dark:border-gray-600 hover:scale-105'}"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ProjectTaskManager.svelte[39m:196:13
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          <button
            [35mon:click={handleAddGroup}[36m
            class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ProjectTaskManager.svelte[39m:202:13
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          <button
            [35mon:click={() => showAddGroup = false}[36m
            class="px-4 py-2 bg-gray-300 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-400 dark:hover:bg-gray-500 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ProjectTaskManager.svelte[39m:227:13
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          <button
            [35mon:click={() => showAddGroup = true}[36m
            class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ProjectTaskManager.svelte[39m:14:7
[33mWarn[39m: `showAddGroup` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m
  let [35mshowAddGroup[36m = false;
  let newGroupName = '';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ProjectTaskManager.svelte[39m:15:7
[33mWarn[39m: `newGroupName` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let showAddGroup = false;
  let [35mnewGroupName[36m = '';
  let newGroupDescription = '';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ProjectTaskManager.svelte[39m:16:7
[33mWarn[39m: `newGroupDescription` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let newGroupName = '';
  let [35mnewGroupDescription[36m = '';
  let newGroupColor = '#3B82F6';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ProjectTaskManager.svelte[39m:17:7
[33mWarn[39m: `newGroupColor` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let newGroupDescription = '';
  let [35mnewGroupColor[36m = '#3B82F6';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/SDKManager.svelte[39m:199:11
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m          on:click={() => console.log('DEBUG: Button clicked!')}
          [35mclass[36m="bg-red-50 hover:bg-red-100 dark:bg-red-900/20 dark:hover:bg-red-900/40"
        >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/SDKManager.svelte[39m:207:11
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m          on:click={checkEnvironment}
          [35mclass[36m="bg-yellow-50 hover:bg-yellow-100 dark:bg-yellow-900/20 dark:hover:bg-yellow-900/40"
        >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/SDKManagerCard.svelte[39m:159:9
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m        size="sm" 
        [35mclass[36m="flex-1"
        on:click={() => sdkStore.refreshAll()}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/SDKManagerCard.svelte[39m:169:9
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m        size="sm" 
        [35mclass[36m="flex-1"
        on:click={navigateToSDKManager}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/ServiceSelector.svelte[39m:75:3
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m<div class="space-y-2">
  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300">
    Services ({selectedServices.length} selected)
  </label>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/Sidebar.svelte[39m:233:7
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m    <div class="flex items-center space-x-2">
      [35m<button
        onclick={goBack}
        disabled={!canGoBack}
        class="flex items-center justify-center w-8 h-8 rounded-md bg-slate-700 hover:bg-slate-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
        title="Go Back"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
      </button>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/Sidebar.svelte[39m:244:7
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m      
      [35m<button
        onclick={goForward}
        disabled={!canGoForward}
        class="flex items-center justify-center w-8 h-8 rounded-md bg-slate-700 hover:bg-slate-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
        title="Go Forward"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </button>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/Sidebar.svelte[39m:257:7
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m      
      [35m<button
        onclick={() => navigateTo('/overview')}
        class="flex items-center justify-center w-8 h-8 rounded-md bg-slate-700 hover:bg-slate-600 transition-colors"
        title="Go to Overview"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
        </svg>
      </button>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/Sidebar.svelte[39m:13:7
[33mWarn[39m: `isLoading` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  // Loading state
  let [35misLoading[36m = false;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/SimpleTerminal.svelte[39m:278:11
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m          disabled={isRunning}
          [35mclass[36m="h-auto p-3 flex flex-col items-center text-sm {selectedCommand === command.command ? 'bg-blue-50 dark:bg-blue-900/20 border-blue-500' : ''}"
        >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/SimpleTerminal.svelte[39m:298:13
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<$$ComponentProps, { default: {}; }>'. (ts)
[36m            disabled={isRunning}
            [35mclass[36m="h-auto p-3 flex flex-col items-center text-sm {selectedCommand === script.command ? 'bg-blue-50 dark:bg-blue-900/20 border-blue-500' : ''}"
          >[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskManager.svelte[39m:62:9
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m      <button
        [35mon:click={() => showAddGroup = !showAddGroup}[36m
        class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors flex items-center space-x-2"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskManager.svelte[39m:134:11
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m        <div>
          [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Group Name
          </label>[36m
          <input[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskManager.svelte[39m:146:11
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m        <div>
          [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Description (optional)
          </label>[36m
          <textarea[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskManager.svelte[39m:158:11
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m        <div>
          [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Color
          </label>[36m
          <div class="flex flex-wrap gap-2">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskManager.svelte[39m:163:15
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m            {#each colorOptions as color}
              [35m<button
                on:click={() => newGroupColor = color}
                class="w-8 h-8 rounded-full border-2 transition-all {newGroupColor === color ? 'border-gray-900 dark:border-gray-100 scale-110' : 'border-gray-300 dark:border-gray-600 hover:scale-105'}"
                style="background-color: {color}"
              ></button>[36m
            {/each}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskManager.svelte[39m:164:17
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m              <button
                [35mon:click={() => newGroupColor = color}[36m
                class="w-8 h-8 rounded-full border-2 transition-all {newGroupColor === color ? 'border-gray-900 dark:border-gray-100 scale-110' : 'border-gray-300 dark:border-gray-600 hover:scale-105'}"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskManager.svelte[39m:174:13
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          <button
            [35mon:click={handleAddGroup}[36m
            class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskManager.svelte[39m:180:13
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          <button
            [35mon:click={() => showAddGroup = false}[36m
            class="px-4 py-2 bg-gray-300 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-400 dark:hover:bg-gray-500 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskManager.svelte[39m:205:13
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          <button
            [35mon:click={() => showAddGroup = true}[36m
            class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskManager.svelte[39m:8:7
[33mWarn[39m: `showAddGroup` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m
  let [35mshowAddGroup[36m = false;
  let newGroupName = '';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskManager.svelte[39m:9:7
[33mWarn[39m: `newGroupName` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let showAddGroup = false;
  let [35mnewGroupName[36m = '';
  let newGroupDescription = '';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskManager.svelte[39m:10:7
[33mWarn[39m: `newGroupDescription` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let newGroupName = '';
  let [35mnewGroupDescription[36m = '';
  let newGroupColor = '#3B82F6';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskManager.svelte[39m:11:7
[33mWarn[39m: `newGroupColor` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let newGroupDescription = '';
  let [35mnewGroupColor[36m = '#3B82F6';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskManager.svelte[39m:3:68
[31mError[39m: Module '"$lib/stores/task-store"' has no exported member 'initializeSampleData'. (ts)
[36m  import { onMount } from 'svelte';
  import { taskGroups, taskGroupActions, filteredTasks, taskStats, [35minitializeSampleData[36m } from '$lib/stores/task-store';
  import TaskGroup from './TaskGroup.svelte';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskPage.svelte[39m:125:11
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m        <button
          [35mon:click={() => showAddGroup = !showAddGroup}[36m
          class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors flex items-center space-x-2"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskPage.svelte[39m:200:11
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m        <div>
          [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Group Name
          </label>[36m
          <input[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskPage.svelte[39m:212:11
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m        <div>
          [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Description (optional)
          </label>[36m
          <textarea[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskPage.svelte[39m:224:11
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m        <div>
          [35m<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Color
          </label>[36m
          <div class="flex flex-wrap gap-2">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskPage.svelte[39m:229:15
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m            {#each colorOptions as color}
              [35m<button
                on:click={() => newGroupColor = color}
                class="w-8 h-8 rounded-full border-2 transition-all {newGroupColor === color ? 'border-gray-900 dark:border-gray-100 scale-110' : 'border-gray-300 dark:border-gray-600 hover:scale-105'}"
                style="background-color: {color}"
              ></button>[36m
            {/each}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskPage.svelte[39m:230:17
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m              <button
                [35mon:click={() => newGroupColor = color}[36m
                class="w-8 h-8 rounded-full border-2 transition-all {newGroupColor === color ? 'border-gray-900 dark:border-gray-100 scale-110' : 'border-gray-300 dark:border-gray-600 hover:scale-105'}"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskPage.svelte[39m:240:13
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          <button
            [35mon:click={handleAddGroup}[36m
            class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskPage.svelte[39m:246:13
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m          <button
            [35mon:click={() => showAddGroup = false}[36m
            class="px-4 py-2 bg-gray-300 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-400 dark:hover:bg-gray-500 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskPage.svelte[39m:274:15
[33mWarn[39m: Using `on:click` to listen to the click event is deprecated. Use the event attribute `onclick` instead
https://svelte.dev/e/event_directive_deprecated (svelte)
[36m            <button
              [35mon:click={() => showAddGroup = true}[36m
              class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors"[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskPage.svelte[39m:30:7
[33mWarn[39m: `showAddGroup` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m
  let [35mshowAddGroup[36m = false;
  let newGroupName = '';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskPage.svelte[39m:31:7
[33mWarn[39m: `newGroupName` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let showAddGroup = false;
  let [35mnewGroupName[36m = '';
  let newGroupDescription = '';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskPage.svelte[39m:32:7
[33mWarn[39m: `newGroupDescription` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let newGroupName = '';
  let [35mnewGroupDescription[36m = '';
  let newGroupColor = '#3B82F6';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskPage.svelte[39m:33:7
[33mWarn[39m: `newGroupColor` is updated, but is not declared with `$state(...)`. Changing its value will not correctly trigger updates
https://svelte.dev/e/non_reactive_update (svelte)
[36m  let newGroupDescription = '';
  let [35mnewGroupColor[36m = '#3B82F6';[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskPage.svelte[39m:283:18
[31mError[39m: Argument of type '() => TaskGroup[]' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m        <div class="space-y-6">
          {#each [35mfilteredTaskGroups[36m as group (group.id)}
            <TaskGroup[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskPage.svelte[39m:283:47
[31mError[39m: 'group' is of type 'unknown'. (ts)
[36m        <div class="space-y-6">
          {#each filteredTaskGroups as group ([35mgroup[36m.id)}
            <TaskGroup[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/TaskPage.svelte[39m:285:16
[31mError[39m: Type 'unknown' is not assignable to type 'TaskGroup'. (ts)
[36m            <TaskGroup 
              {[35mgroup[36m} 
              on:updateGroup={handleUpdateGroup}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/Terminal.svelte[39m:205:9
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m      {#if isRunning}
        [35m<button
          onclick={stopCommand}
          class="p-1 text-red-400 hover:text-red-200 hover:bg-red-900/20 rounded"
          title="Stop command"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 10a1 1 0 011-1h4a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 01-1-1v-4z"></path>
          </svg>
        </button>[36m
      {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/Terminal.svelte[39m:216:7
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m      {/if}
      [35m<button
        onclick={onClose}
        class="p-1 text-gray-400 hover:text-gray-200 hover:bg-gray-700 rounded"
        title="Close terminal"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogsFilter.svelte[39m:63:9
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m      <div class="space-y-2">
        [35m<label class="text-sm font-medium">Search</label>[36m
        <Input[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogsFilter.svelte[39m:74:9
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m      <div class="space-y-2">
        [35m<label class="text-sm font-medium">Severity</label>[36m
        <Select value={selectedSeverity} onchange={handleSeverityChange}>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogsFilter.svelte[39m:85:9
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m      <div class="space-y-2">
        [35m<label class="text-sm font-medium">Pod</label>[36m
        <Select value={selectedPod} onchange={handlePodChange}>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/logs/LogsFilter.svelte[39m:96:9
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m      <div class="space-y-2">
        [35m<label class="text-sm font-medium">Namespace</label>[36m
        <Select value={selectedNamespace} onchange={handleNamespaceChange}>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/navigation/Sidebar.svelte[39m:247:7
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m      
      [35m<button
        onclick={goForward}
        disabled={!canGoForward}
        class="flex items-center justify-center w-8 h-8 rounded-md bg-slate-700 hover:bg-slate-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
        title="Go Forward"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </button>[36m[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/lib/components/navigation/Sidebar.svelte[39m:260:7
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m      
      [35m<button
        onclick={() => navigateTo('/overview')}
        class="flex items-center justify-center w-8 h-8 rounded-md bg-slate-700 hover:bg-slate-600 transition-colors"
        title="Go to Overview"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
        </svg>
      </button>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/+layout.svelte[39m:54:7
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m    <div class="flex-1 overflow-y-auto">
      [35m<slot />[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/clusters/+page.svelte[39m:544:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">
                  Cluster Type
                </label>[36m
                <select[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/clusters/+page.svelte[39m:559:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">
                  Kubeconfig File
                </label>[36m
                <input[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/projects/[id]/+page.svelte[39m:464:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
                  Project Name
                </label>[36m
                <p class="text-slate-900 dark:text-white">{project.name}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/projects/[id]/+page.svelte[39m:470:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
                  Directory Path
                </label>[36m
                <p class="text-slate-900 dark:text-white font-mono text-sm break-all">{project.path}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/projects/[id]/+page.svelte[39m:476:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
                  Framework
                </label>[36m
                <p class="text-slate-900 dark:text-white">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/projects/[id]/+page.svelte[39m:484:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
                  Kubernetes Deployment
                </label>[36m
                <p class="text-slate-900 dark:text-white">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/projects/[id]/+page.svelte[39m:492:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
                  Status
                </label>[36m
                <p class="text-slate-900 dark:text-white">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/projects/[id]/+page.svelte[39m:512:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
                  Created
                </label>[36m
                <p class="text-slate-900 dark:text-white">{formatDate(project.created_at)}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/projects/[id]/+page.svelte[39m:518:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
                  Last Updated
                </label>[36m
                <p class="text-slate-900 dark:text-white">{formatDate(project.updated_at)}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/projects/[id]/+page.svelte[39m:524:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
                  Starred
                </label>[36m
                <p class="text-slate-900 dark:text-white">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/projects/[id]/+page.svelte[39m:549:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
                    Deployment Name
                  </label>[36m
                  <p class="text-slate-900 dark:text-white">{deploymentDetails.metadata.name}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/projects/[id]/+page.svelte[39m:555:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
                    Namespace
                  </label>[36m
                  <p class="text-slate-900 dark:text-white">{deploymentDetails.metadata.namespace}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/projects/[id]/+page.svelte[39m:561:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
                    Replicas
                  </label>[36m
                  <p class="text-slate-900 dark:text-white">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/projects/[id]/+page.svelte[39m:569:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
                    Available
                  </label>[36m
                  <p class="text-slate-900 dark:text-white">{deploymentDetails.status.availableReplicas || 0}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/projects/[id]/+page.svelte[39m:575:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
                    Updated
                  </label>[36m
                  <p class="text-slate-900 dark:text-white">{deploymentDetails.status.updatedReplicas || 0}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/projects/[id]/+page.svelte[39m:581:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">
                    Ready
                  </label>[36m
                  <p class="text-slate-900 dark:text-white">{deploymentDetails.status.readyReplicas || 0}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/settings/+page.svelte[39m:883:27
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m                        <div class="flex flex-col items-center">
                          [35m<div 
                            class="flex flex-col items-center p-3 bg-slate-50 dark:bg-slate-700 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-600 transition-colors cursor-pointer w-full"
                            onclick={() => openIde(executable)}
                            title="Open {executable}"
                          >
                            <div class="text-2xl mb-2">{getIdeIcon(executable)}</div>
                            <div class="flex items-center space-x-2 mb-2">
                              <span class="text-green-500 text-sm">✓</span>
                              <span class="font-mono text-sm text-slate-900 dark:text-white text-center">
                                {executable}
                              </span>
                            </div>
                          </div>[36m
                          {#if !isConfigured}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/settings/+page.svelte[39m:883:27
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m                        <div class="flex flex-col items-center">
                          [35m<div 
                            class="flex flex-col items-center p-3 bg-slate-50 dark:bg-slate-700 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-600 transition-colors cursor-pointer w-full"
                            onclick={() => openIde(executable)}
                            title="Open {executable}"
                          >
                            <div class="text-2xl mb-2">{getIdeIcon(executable)}</div>
                            <div class="flex items-center space-x-2 mb-2">
                              <span class="text-green-500 text-sm">✓</span>
                              <span class="font-mono text-sm text-slate-900 dark:text-white text-center">
                                {executable}
                              </span>
                            </div>
                          </div>[36m
                          {#if !isConfigured}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:247:5
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m  {#if selectedConfig}
    [35m<div class="modal-overlay" onclick={() => selectedConfig = null}>
      <div class="modal-content" onclick={(e) => e.stopPropagation()}>
        <div class="modal-header">
          <h2 class="modal-title">
            {configMaps.includes(selectedConfig as K8sConfigMap) ? 'ConfigMap' : 'Secret'}: {selectedConfig.name}
          </h2>
          <div class="flex items-center space-x-2">
                        <Button variant="outline" onclick={() => startEditing()}>Edit</Button>
            <Button variant="ghost" onclick={() => selectedConfig = null}>×</Button>
          </div>
        </div>
        
        <div class="modal-body">
          {#if isEditing}
            <ConfigTreeEditor 
              data={editingData} 
              on:save={(event) => {
                // TODO: Implement save functionality
                showNotification('Changes saved successfully!', 'success');
                isEditing = false;
              }}
              on:cancel={() => cancelEditing()}
            />
          {:else}
            <ConfigDataViewer 
              data={selectedConfig.data}
            />
          {/if}
        </div>
      </div>
    </div>[36m
  {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:247:5
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m  {#if selectedConfig}
    [35m<div class="modal-overlay" onclick={() => selectedConfig = null}>
      <div class="modal-content" onclick={(e) => e.stopPropagation()}>
        <div class="modal-header">
          <h2 class="modal-title">
            {configMaps.includes(selectedConfig as K8sConfigMap) ? 'ConfigMap' : 'Secret'}: {selectedConfig.name}
          </h2>
          <div class="flex items-center space-x-2">
                        <Button variant="outline" onclick={() => startEditing()}>Edit</Button>
            <Button variant="ghost" onclick={() => selectedConfig = null}>×</Button>
          </div>
        </div>
        
        <div class="modal-body">
          {#if isEditing}
            <ConfigTreeEditor 
              data={editingData} 
              on:save={(event) => {
                // TODO: Implement save functionality
                showNotification('Changes saved successfully!', 'success');
                isEditing = false;
              }}
              on:cancel={() => cancelEditing()}
            />
          {:else}
            <ConfigDataViewer 
              data={selectedConfig.data}
            />
          {/if}
        </div>
      </div>
    </div>[36m
  {/if}[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:248:7
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m    <div class="modal-overlay" onclick={() => selectedConfig = null}>
      [35m<div class="modal-content" onclick={(e) => e.stopPropagation()}>
        <div class="modal-header">
          <h2 class="modal-title">
            {configMaps.includes(selectedConfig as K8sConfigMap) ? 'ConfigMap' : 'Secret'}: {selectedConfig.name}
          </h2>
          <div class="flex items-center space-x-2">
                        <Button variant="outline" onclick={() => startEditing()}>Edit</Button>
            <Button variant="ghost" onclick={() => selectedConfig = null}>×</Button>
          </div>
        </div>
        
        <div class="modal-body">
          {#if isEditing}
            <ConfigTreeEditor 
              data={editingData} 
              on:save={(event) => {
                // TODO: Implement save functionality
                showNotification('Changes saved successfully!', 'success');
                isEditing = false;
              }}
              on:cancel={() => cancelEditing()}
            />
          {:else}
            <ConfigDataViewer 
              data={selectedConfig.data}
            />
          {/if}
        </div>
      </div>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:248:7
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m    <div class="modal-overlay" onclick={() => selectedConfig = null}>
      [35m<div class="modal-content" onclick={(e) => e.stopPropagation()}>
        <div class="modal-header">
          <h2 class="modal-title">
            {configMaps.includes(selectedConfig as K8sConfigMap) ? 'ConfigMap' : 'Secret'}: {selectedConfig.name}
          </h2>
          <div class="flex items-center space-x-2">
                        <Button variant="outline" onclick={() => startEditing()}>Edit</Button>
            <Button variant="ghost" onclick={() => selectedConfig = null}>×</Button>
          </div>
        </div>
        
        <div class="modal-body">
          {#if isEditing}
            <ConfigTreeEditor 
              data={editingData} 
              on:save={(event) => {
                // TODO: Implement save functionality
                showNotification('Changes saved successfully!', 'success');
                isEditing = false;
              }}
              on:cancel={() => cancelEditing()}
            />
          {:else}
            <ConfigDataViewer 
              data={selectedConfig.data}
            />
          {/if}
        </div>
      </div>[36m
    </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:302:3
[33mWarn[39m: Unused CSS selector ".dark .header"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .header[36m {
    background-color: rgb(31 41 55);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:321:3
[33mWarn[39m: Unused CSS selector ".dark .title-section h1"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .title-section h1[36m {
    color: white;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:329:3
[33mWarn[39m: Unused CSS selector ".dark .title-section p"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .title-section p[36m {
    color: rgb(156 163 175);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:346:3
[33mWarn[39m: Unused CSS selector ".dark .filters"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .filters[36m {
    background-color: rgb(31 41 55);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:374:3
[33mWarn[39m: Unused CSS selector ".dark .search-input"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .search-input[36m {
    border-color: rgb(75 85 99);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:380:3
[33mWarn[39m: Unused CSS selector ".dark .search-input::placeholder"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .search-input::placeholder[36m {
    color: rgb(156 163 175);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:399:3
[33mWarn[39m: Unused CSS selector ".dark .type-filter"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .type-filter[36m {
    border-color: rgb(75 85 99);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:420:3
[33mWarn[39m: Unused CSS selector ".dark .loading"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .loading[36m {
    color: rgb(156 163 175);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:463:3
[33mWarn[39m: Unused CSS selector ".dark .empty-state h3"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .empty-state h3[36m {
    color: white;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:471:3
[33mWarn[39m: Unused CSS selector ".dark .empty-state p"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .empty-state p[36m {
    color: rgb(156 163 175);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:506:3
[33mWarn[39m: Unused CSS selector ".dark .config-card"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .config-card[36m {
    background-color: rgb(31 41 55);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:535:3
[33mWarn[39m: Unused CSS selector ".dark .config-type-badge.configmap"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .config-type-badge.configmap[36m {
    background-color: rgb(30 58 138);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:545:3
[33mWarn[39m: Unused CSS selector ".dark .config-type-badge.secret"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .config-type-badge.secret[36m {
    background-color: rgb(127 29 29);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:557:3
[33mWarn[39m: Unused CSS selector ".dark .config-name"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .config-name[36m {
    color: white;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:574:3
[33mWarn[39m: Unused CSS selector ".dark .config-details p"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .config-details p[36m {
    color: rgb(156 163 175);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:583:3
[33mWarn[39m: Unused CSS selector ".view-btn"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.view-btn[36m {
    padding: 0.5rem 1rem;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:591:3
[33mWarn[39m: Unused CSS selector ".view-btn:hover"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.view-btn:hover[36m {
    background-color: rgb(29 78 216);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:616:3
[33mWarn[39m: Unused CSS selector ".dark .modal-content"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .modal-content[36m {
    background-color: rgb(31 41 55);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:628:3
[33mWarn[39m: Unused CSS selector ".dark .modal-header"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .modal-header[36m {
    border-bottom-color: rgb(55 65 81);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:639:3
[33mWarn[39m: Unused CSS selector ".dark .modal-title"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .modal-title[36m {
    color: white;[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:643:3
[33mWarn[39m: Unused CSS selector ".close-btn"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.close-btn[36m {
    color: rgb(156 163 175);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:650:3
[33mWarn[39m: Unused CSS selector ".close-btn:hover"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.close-btn:hover[36m {
    color: rgb(75 85 99);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/configs/+page.svelte[39m:654:3
[33mWarn[39m: Unused CSS selector ".dark .close-btn:hover"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.dark .close-btn:hover[36m {
    color: rgb(209 213 219);[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/deployments/[deployment]/+page.svelte[39m:404:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="text-sm font-medium text-slate-500 dark:text-slate-400">Status</label>[36m
                  <div class="mt-1">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/deployments/[deployment]/+page.svelte[39m:412:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="text-sm font-medium text-slate-500 dark:text-slate-400">Replicas</label>[36m
                  <p class="mt-1 text-sm text-slate-900 dark:text-white">{deployment.ready}/{deployment.replicas}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/deployments/[deployment]/+page.svelte[39m:416:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="text-sm font-medium text-slate-500 dark:text-slate-400">Available</label>[36m
                  <p class="mt-1 text-sm text-slate-900 dark:text-white">{deployment.available}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/deployments/[deployment]/+page.svelte[39m:420:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="text-sm font-medium text-slate-500 dark:text-slate-400">Updated</label>[36m
                  <p class="mt-1 text-sm text-slate-900 dark:text-white">{deployment.updated}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/deployments/[deployment]/+page.svelte[39m:424:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="text-sm font-medium text-slate-500 dark:text-slate-400">Age</label>[36m
                  <p class="mt-1 text-sm text-slate-900 dark:text-white">{deployment.age}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/deployments/[deployment]/+page.svelte[39m:428:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="text-sm font-medium text-slate-500 dark:text-slate-400">Strategy</label>[36m
                  <p class="mt-1 text-sm text-slate-900 dark:text-white">{deployment.strategy}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/deployments/[deployment]/+page.svelte[39m:546:32
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                             <div class="flex items-center space-x-1">
                               [35m<button 
                                 onclick={() => handleViewPod(pod)}
                                 class="p-2 text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded-lg transition-all duration-200 hover:scale-105"
                                 title="View Pod Details"
                               >
                                 <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                   <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                   <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                                 </svg>
                               </button>[36m
                               <button[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/deployments/[deployment]/+page.svelte[39m:556:32
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                               </button>
                               [35m<button 
                                 onclick={() => handleViewLogs(pod)}
                                 class="p-2 text-green-600 hover:text-green-800 dark:text-green-400 dark:hover:text-green-300 hover:bg-green-50 dark:hover:bg-green-900/20 rounded-lg transition-all duration-200 hover:scale-105"
                                 title="View Pod Logs"
                               >
                                 <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                   <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                 </svg>
                               </button>[36m
                               <button[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/deployments/[deployment]/+page.svelte[39m:565:32
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                               </button>
                               [35m<button 
                                 onclick={() => handleCopyPodName(pod)}
                                 class="p-2 text-slate-600 hover:text-slate-800 dark:text-slate-400 dark:hover:text-slate-300 hover:bg-slate-50 dark:hover:bg-slate-700/50 rounded-lg transition-all duration-200 hover:scale-105"
                                 title="Copy Pod Name"
                               >
                                 <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                   <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                                 </svg>
                               </button>[36m
                             </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/deployments/[deployment]/+page.svelte[39m:665:9
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m      <div class="mb-4">
        [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">
          Number of Replicas
        </label>[36m
        <input[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/jobs/+page.svelte[39m:247:13
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m          <div class="flex items-center space-x-4">
            [35m<label class="text-sm font-medium text-slate-700 dark:text-slate-300">
              Filter by Service:
            </label>[36m
            <select[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/jobs/[job]/+page.svelte[39m:262:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="text-sm font-medium text-slate-500 dark:text-slate-400">Total Jobs</label>[36m
                <p class="mt-1 text-sm text-slate-900 dark:text-white">{jobs.length}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/jobs/[job]/+page.svelte[39m:266:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="text-sm font-medium text-slate-500 dark:text-slate-400">Running</label>[36m
                <p class="mt-1 text-sm text-blue-600 dark:text-blue-400">{jobs.filter(j => j.status === 'Running' || j.status === 'Pending').length}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/jobs/[job]/+page.svelte[39m:270:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="text-sm font-medium text-slate-500 dark:text-slate-400">Completed</label>[36m
                <p class="mt-1 text-sm text-green-600 dark:text-green-400">{jobs.filter(j => j.status === 'Completed' || j.status === 'Succeeded').length}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/jobs/[job]/+page.svelte[39m:274:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="text-sm font-medium text-slate-500 dark:text-slate-400">Failed</label>[36m
                <p class="mt-1 text-sm text-red-600 dark:text-red-400">{jobs.filter(j => j.status === 'Failed' || j.status === 'Error').length}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/pods/+page.svelte[39m:383:27
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                          </Button>
                          [35m<button 
                            onclick={() => handleViewLogs(pod)}
                            class="p-2 text-green-600 hover:text-green-800 dark:text-green-400 dark:hover:text-green-300 hover:bg-green-50 dark:hover:bg-green-900/20 rounded-lg transition-all duration-200 hover:scale-105"
                            title="View Pod Logs"
                          >
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                            </svg>
                          </button>[36m
                          <button[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/pods/+page.svelte[39m:392:27
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                          </button>
                          [35m<button 
                            onclick={() => handleCopyPodName(pod)}
                            class="p-2 text-slate-600 hover:text-slate-800 dark:text-slate-400 dark:hover:text-slate-300 hover:bg-slate-50 dark:hover:bg-slate-700/50 rounded-lg transition-all duration-200 hover:scale-105"
                            title="Copy Pod Name"
                          >
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                            </svg>
                          </button>[36m
                        </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/pods/[pod]/+page.svelte[39m:479:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="text-sm font-medium text-slate-500 dark:text-slate-400">Status</label>[36m
                  <div class="mt-1">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/pods/[pod]/+page.svelte[39m:487:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="text-sm font-medium text-slate-500 dark:text-slate-400">Ready</label>[36m
                  <p class="mt-1 text-sm text-slate-900 dark:text-white">{pod.ready}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/pods/[pod]/+page.svelte[39m:491:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="text-sm font-medium text-slate-500 dark:text-slate-400">Restarts</label>[36m
                  <p class="mt-1 text-sm text-slate-900 dark:text-white">{pod.restarts}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/pods/[pod]/+page.svelte[39m:495:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="text-sm font-medium text-slate-500 dark:text-slate-400">Age</label>[36m
                  <p class="mt-1 text-sm text-slate-900 dark:text-white">{pod.age}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/pods/[pod]/+page.svelte[39m:499:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="text-sm font-medium text-slate-500 dark:text-slate-400">Namespace</label>[36m
                  <p class="mt-1 text-sm text-slate-900 dark:text-white">{pod.namespace}</p>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/pods/[pod]/+page.svelte[39m:503:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="text-sm font-medium text-slate-500 dark:text-slate-400">Name</label>[36m
                  <div class="mt-1 flex items-center space-x-2">[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/pods/[pod]/+page.svelte[39m:506:21
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                    <p class="text-sm text-slate-900 dark:text-white">{pod?.name || ''}</p>
                    [35m<button
                      onclick={() => copyToClipboard(pod?.name || '')}
                      class="text-slate-400 hover:text-slate-600"
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                      </svg>
                    </button>[36m
                  </div>[39m

/media/tan/ExternalDrive/project/production/logs-explorer/[32msrc/routes/workloads/pods/[pod]/+page.svelte[39m:618:9
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m      <div class="mb-4">
        [35m<label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">
          Number of Replicas
        </label>[36m
        <input[39m

====================================
[31msvelte-check found 332 errors and 347 warnings in 156 files
[39m ELIFECYCLE  Command failed with exit code 1.
